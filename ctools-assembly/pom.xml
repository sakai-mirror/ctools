<project xmlns="http://maven.apache.org/POM/4.0.0">
  <!-- $HeadURL$ -->
  <!-- $Id$ -->
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>base</artifactId>
    <groupId>org.sakaiproject</groupId>
    <version>M2</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <groupId>org.sakaiproject</groupId>
  <artifactId>ctools-assembly</artifactId>
  <packaging>pom</packaging>
  <name>CTools Build Assembly</name>
  <version>M2</version>
  <organization>
    <name>University of Michigan</name>
    <url>http://sakaiproject.org/</url>
  </organization>
  
  <properties>
    <sakai.plugin.version>2.2</sakai.plugin.version>
    <sakai.tomcat.version>5.5.23</sakai.tomcat.version>
    <ctools.archive.name>ctools-assembly</ctools.archive.name>

    <!-- these are values that used to live in shared.properties -->
    <favicon.name>favicon.ico</favicon.name>
    <errorpages.dir>error-pages</errorpages.dir>
    <tomcatWebXml.name>web.xml.5.5.23</tomcatWebXml.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>tomcat.tomcat</groupId>
      <artifactId>tomcat</artifactId>
      <version>${sakai.tomcat.version}</version>
      <type>zip</type>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
	<artifactId>maven-antrun-plugin</artifactId>
	<executions>

	  <execution>
	    <id>ctools-assembly-clean</id>
	    <phase>install</phase>
	    <configuration>
	      <tasks>
		<!-- gradebook customization -->
	  <!-- These are defined now in a local build properties file, but I modified them like this incase they were still used this way 
	  -->
	  <condition property="gradebook.grades.config.sourcefile" value="UMichGrades.xml">
	    <not><isset property="gradebook.grades.config.sourcefile" /></not>
	  </condition>

	  <condition property="gradebook.grades.config.tofile" value="gradebook/service/sakai-pack/src/webapp/WEB-INF/components.xml">
	    <not><isset property="gradebook.grades.config.tofile" /></not>
	  </condition>

	  <condition property="tiny_mce.path" value="http://source.sakaiproject.org/maven/tiny_mce/wars">
	    <not><isset property="tiny_mce.path" /></not>
	  </condition>

	  <condition property="tiny_mce.name.src" value="tiny_mce-3.0.3.war">
	    <not><isset property="tiny_mce.name.src" /></not>
	  </condition>
	  <condition property="tiny_mce.name.dest" value="tiny_mce.war">
	    <not><isset property="tiny_mce.name.dest" /></not>
	  </condition>
	<!-- clear the deploy area -->
		<delete dir="${basedir}/target/unpack"/>
		<delete dir="${basedir}/target/pack"/>


		<tstamp><format property="timestamp.prestart" pattern="HH:mm:ss"/></tstamp>
		<echo>Pre-compile changes started at ${timestamp.prestart}</echo>
		<!-- ===================== pre compile changes ============== -->
		<echo> Copy in the UMich rwiki default pages </echo>

		<property name="src.dir" value="${basedir}/.." />		
		<property name="reference.dir" value="${src.dir}/ctools-reference" />

		<echo> src.dir=${src.dir}</echo>
		<echo> reference.dir=${reference.dir}</echo>

		<copy file="${reference.dir}/config/09PrepopulatePages.properties"
		      tofile="${src.dir}/rwiki/rwiki-tool/tool/src/bundle/uk/ac/cam/caret/sakai/rwiki/tool/bundle/PrepopulatePages.properties"
		      overwrite="true"
		      flatten="true"
		      />

		<echo>update grade file for UMich</echo>
		<copy file="${reference.dir}/${gradebook.grades.config.sourcefile}"
		      tofile="${src.dir}/${gradebook.grades.config.tofile}"
		      overwrite="true"/>

		<echo> copy the linktool to web services</echo>
		<echo> Copy the linktool jws files to sakai webservices. </echo>
		<copy todir="${src.dir}/webservices/axis/src/webapp"
		      overwrite="true">
		  <fileset dir="${src.dir}/linktool" includes="*.jws" />
		  <fileset dir="${src.dir}/ctools-webservices" includes="ActivityTracker.jws" />
		</copy>

		<!-- copy in the CTools web services -->
		<echo>copy in ActivityTracker</echo>
		<echo> Copy the ctools jws files to sakai webservices webapp. </echo>
		<copy todir="${src.dir}/webservices/axis/src/webapp"
		      overwrite="true"
		      flatten="true">
		  <fileset dir="${src.dir}/ctools-webservices" includes="**/ActivityTracker.jws" />
		</copy>

		<!-- add hook to make global changes, e.g. make change allocation of new boolean values to use valueOf -->
		<!-- define any value for src.global.edit.skip to avoid doing this step. -->
		<!-- example from build-ctools.xml.  will NOT work as is. 
		     maybe this should be in external script like source extraction
		     <target name="editSrcGlobal" if="src.global.edit.perform" 
		     description="make any global changes to the source desired.">
		     <echo> Run global edit script </echo>
		     <exec dir="." executable="perl" failonerror="true">
		     <arg value="${patches.dir}/easy_wins_find_java.pl" />
		     <arg value="${work.dir}/build" />
		     <arg value="0" />
		     </exec>
		     </target>
		-->

		<!-- Be sure these tools don't appear in the project category -->

		<echo> edit registrations under ${src.dir} to make sure the tool categories are as desired.</echo>

		<!-- make the project category disappear for these. -->

		<echo> make sure that edit the melete tool xml when necessary. </echo>

		<replaceregexp >
		  <fileset dir="${src.dir}" >
		    <include name="gradebook/**/sakai.gradebook.tool.xml" />
		    <!-- <include name="**/sakai.samigo.tool.xml"/> -->
		    <include name="content/**/sakai.dropbox.xml" />
		    
		    <!-- <include name="melete/**/sakai.melete.xml" /> -->
		  </fileset>
		  <regexp pattern="&lt;category.*name=&quot;project&quot;.*"/>
		  <substitution  expression="" />
		</replaceregexp>

		<!-- gradtools modifications -->
		<echo> edit file: ${src.dir}/site-manage/**/tools/sakai.sitesetup.xml for gradtools.</echo>

		<echo> edit file: deal with siteType</echo>
		<replaceregexp >
		  <fileset dir="${src.dir}/site-manage" >
		    <include name="**/webapp/tools/sakai.sitesetup.xml" />
		    <include name="**/webapp/tools/sakai.siteinfo.xml" />
		  </fileset>
		  <regexp pattern="configuration name=&quot;siteTypes&quot; value=&quot;course,project&quot;" />
		  <substitution 
		      expression="configuration name=&quot;siteTypes&quot; value=&quot;course,project,GradToolsStudent&quot;" />
		</replaceregexp>

		<echo> edit file: deal with privateSiteType </echo>
		<replaceregexp >
		  <fileset dir="${src.dir}/site-manage" >
		    <include name="**/webapp/tools/sakai.sitesetup.xml" />
		    <include name="**/webapp/tools/sakai.siteinfo.xml" />
		  </fileset>
		  <regexp pattern="configuration name=&quot;privateSiteTypes&quot; value=&quot;&quot;" />
		  <substitution  expression="configuration name=&quot;privateSiteTypes&quot; value=&quot;GradToolsStudent&quot;" />
		</replaceregexp>

		<echo>edit file: add gradtools categories</echo>
		<replaceregexp>
		  <regexp pattern="(&lt;category name=&quot;project&quot; /&gt;)" />
		  <substitution expression="\1 &lt;category name=&quot;GradToolsStudent&quot; /&gt;  &lt;category name=&quot;GradToolsDepartment&quot; /&gt;  &lt;category name=&quot;GradToolsRackham&quot; /&gt;" />
		  
		  <fileset dir="${src.dir}"  >
		    <include name="**/webapp/tools/sakai.announcements.xml" />
		    <include name="**/webapp/tools/sakai.chat.xml" />
		    <include name="**/webapp/tools/sakai.discussion.xml" />
		    <include name="**/webapp/tools/sakai.iframe.xml" />
		    <include name="**/webapp/tools/sakai.resources.xml" />
		    <include name="**/webapp/tools/sakai.rwiki.xml" />
		    <include name="**/webapp/tools/sakai.schedule.xml" />
		    <include name="**/webapp/tools/sakai.siteinfo.xml" />
		  </fileset>

		</replaceregexp>

		<echo>edit file: add GradToolStudent category to dropbox, mailbox, and news</echo>
		<replaceregexp>

		  <regexp pattern="(&lt;category name=&quot;project&quot; /&gt;)" />
		  <substitution expression="\1 &lt;category name=&quot;GradToolsStudent&quot; /&gt;" />
		  
		  <fileset dir="${src.dir}">
		    <include name="**/webapp/tools/sakai.dropbox.xml" />
		    <include name="**/webapp/tools/sakai.mailbox.xml" />
		    <include name="**/webapp/tools/sakai.news.xml" />
		  </fileset>

		</replaceregexp>
    
		<tstamp><format property="timestamp.preend" pattern="HH:mm:ss"/></tstamp>
		<echo>message=Pre-compile changes ended at ${timestamp.preend}</echo> 
		<!-- ===================== compile Sakai/CTools ============== -->
		<!-- build Sakai and assemble an image into ctools-assembly.  Should the profile be a variable? -->
		<echo>Executing cd ${src.dir}/ctools-build;mvn  -P ctools -Dmaven.tomcat.home=${basedir}/target/pack -Dmaven.test.skip=true clean install sakai:deploy</echo> 
		<exec dir="${src.dir}/ctools-build" executable="mvn" failonerror="true" >
		  <arg value="-P ctools" />
		  <arg value="-Dmaven.tomcat.home=${basedir}/target/pack"/>
		  <arg value="-Dmaven.test.skip=true"/>
		  <arg value="clean"/>
		  <arg value="install"/>
		  <arg value="sakai:deploy"/>
		</exec>                       
		
		<tstamp><format property="timestamp.poststart" pattern="HH:mm:ss"/></tstamp>
		<echo>Post-compile changes started at ${timestamp.poststart}</echo>
		<!-- Post-Compile Changes -->
		<!-- Insert the ctools favorite icon -->
		<echo>add favicon</echo>
		<mkdir dir="${basedir}/target/pack/webapps/ROOT" />
		<copy file="${basedir}/../ctools-reference/${favicon.name}"
		      todir="${basedir}/target/pack/webapps/ROOT"
		      overwrite="true" />

		<echo>add error pages</echo>
		<mkdir dir="${basedir}/target/pack/webapps/ROOT" />
		<copy todir="${basedir}/target/pack/webapps/ROOT/${errorpages.dir}"
		      overwrite="true" >
		  <fileset dir="${reference.dir}/${errorpages.dir}" />
		</copy>

		<echo>add ctools web.xml</echo>
		<mkdir dir="${basedir}/target/pack/conf" />
		<copy tofile="${basedir}/target/pack/conf/web.xml"
		      file="${reference.dir}/${tomcatWebXml.name}" 
		      overwrite="true" 
		      />

		<!-- insert the licence -->
		<!-- <copy file="${basedir}/../ECLv1.txt" tofile="${basedir}/target/pack/ECLv1.txt" overwrite="true" /> -->

		<!-- tiny mce -->
		<get src="${tiny_mce.path}/${tiny_mce.name.src}" dest="${basedir}/target/pack/webapps/${tiny_mce.name.dest}" />


		<!-- ================== notes about what is left to do =================== -->
		<echo>* what about section fields?</echo>
		<!-- <echo>gradtools edit</echo> -->
		<echo>* Berg modification script (some day maybe)</echo>
		<echo>* default tools</echo>
		<!-- need verification, but appear to be in.
		     <echo>gradebook grades</echo>
		     <echo>linktool</echo>
		     <echo>ctools jws</echo>
		     

		-->

		<!--
		<target name="handleErrorPages" if="errorpages.dir" >
		  <mkdir dir="${image.dir}/webapps/ROOT" />
		  <copy todir="${image.dir}/webapps/ROOT/${errorpages.dir}"
			overwrite="true" >
		    <fileset dir="${reference.dir}/${errorpages.dir}" />
		  </copy>
		</target>
		-->

		<tstamp><format property="timestamp.postend" pattern="HH:mm:ss"/></tstamp>
		<echo>Post-compile changes ended at ${timestamp.postend}</echo>

		<!-- tar it -->
		<delete file="${ctools.archive.name}-${sakai.version}.tar" />
		<tstamp><format property="timestamp.archivestart" pattern="HH:mm:ss"/></tstamp>
		<echo>make ctools archive started at ${timestamp.archivestart}</echo>
		<tar destfile="${ctools.archive.name}-${sakai.version}.tar" longfile="gnu" compression="none">
		  <!-- <tarfileset dir="${basedir}/target/pack/" mode="755" prefix="${ctools.archive.name}-${sakai.version}"> -->
		  <tarfileset dir="${basedir}/target/pack/" mode="755" >
		    <include name="**/*.sh"/>
		  </tarfileset>
		  <!-- <tarfileset dir="${basedir}/target/pack/" prefix="${ctools.archive.name}-${sakai.version}"> -->
		  <tarfileset dir="${basedir}/target/pack/" >
		    <exclude name="**/*.sh"/>
		  </tarfileset>
		</tar>
		<tstamp><format property="timestamp.archiveend" pattern="HH:mm:ss"/></tstamp>
		<echo>* * * ${ctools.archive.name}-${sakai.version}.tar ended at ${timestamp.archiveend}</echo>

		<!-- make a src tar (and include the svn directories) -->
		<delete file="${ctools.archive.name}-${sakai.version}-src.tar.gz" />
		<tstamp><format property="timestamp.srcstart" pattern="HH:mm:ss"/></tstamp>
		<echo>make ctools src tgz started at ${timestamp.srcstart}</echo>
		<!-- make sure to INCLUDE the .svn files and EXCLUDE the binary files. -->
		<defaultexcludes remove="**/.svn" />
		<defaultexcludes remove="**/.svn/**" />
		<defaultexcludes add="**/target/**" />
		<defaultexcludes add="**/m2-target/**" />
		<defaultexcludes add="**/bin/**" />
		<defaultexcludes add="**/${ctools.archive.name}-${sakai.version}.tar.gz" />
		<defaultexcludes add="**/${ctools.archive.name}-${sakai.version}.tar" />

		<tar destfile="${ctools.archive.name}-${sakai.version}-src.tar.gz" longfile="gnu" compression="gzip">
		  <tarfileset dir="${basedir}/.." mode="755" prefix="${ctools.archive.name}-${sakai.version}-src">
		  </tarfileset>
		</tar>
		<tstamp><format property="timestamp.srcend" pattern="HH:mm:ss"/></tstamp>
		<echo>* * * ${ctools.archive.name}-${sakai.version}-src.tar.gz ended at ${timestamp.srcend}</echo>
		<echo> do not remove build yet</echo>
		<!--
		<delete dir="${basedir}/target/pack/"/>
		-->
		<echo> * remove unneeded parts of build</echo>
		<echo> * verify image modifications</echo>
	      </tasks>

	    </configuration>
	    <goals>
	      <goal>run</goal>
	    </goals>
	  </execution>	  

	</executions>
	<dependencies>
	  <dependency>
	    <groupId>ant</groupId>
	    <artifactId>ant-nodeps</artifactId>
	    <version>1.6.5</version>
	  </dependency>
	  <dependency>
	    <groupId>ant</groupId>
	    <artifactId>ant-apache-regexp</artifactId>
	    <version>1.6.5</version>
	  </dependency>
	  <dependency>
	    <artifactId>jakarta-regexp</artifactId>
	    <groupId>jakarta-regexp</groupId>
	    <version>1.4</version>
	  </dependency>
	</dependencies>
      </plugin>
    </plugins>
  </build>
</project>
