<project name="build-type-ctoolsload" basedir="." default="info" >

  <!--

this should only have things specific to a type of build.

$Id$
$HeadURL$

This ant script will control building an image for production with a
specific configuration.  It calls a basic script, and calls
additional ones as necessary to deal with specific situations.  Those
are included via the import tasks below.  Those additional scripts
are used to deal with compliations that arise with exernal tools
(e.g. melete) where the source is not in the normal Sakai repository,
and there are things that need to be modified in the configuration.

The imported files are meant to include the targets specific only to
that tool or tools.  They do not need to be aware of the overall
build process.

Values particular to a specific build are kept in a properties file.
The attribute name of file is "config-file" so a specific properties
file can be set on the command line.  

E.g. "ant -f build-pilot.xml -Dconfig-file=atestconfiguration.properties buildCtoolsImage."

It does not default to a useful file since you don't want to just
build a default configuration for production.

This file may grow large, with many targets if there are a varity of
images you wish to build.

In general the steps that a tool build will go thorough are:
- get source
- edit source (changing configuration from default values perhaps) and getting rid
of directories and files that aren't required.
- compiling sakai based on the source created above
- building an image for installation from the compiled artifacts.

This doesn't supply the sakai.properties files you want to customize.

  -->

  <!-- 
       TTD:
       - remote execution either from here, or make this so one command can run it on a remote host.
       - automate installing / populating the tomcat
       - formalize the project.properties more
       - order is first gets it, so read local project.properties first
       - clean up / regularize
       - change logging format (e.g. use the Josh format)
       - easier way to set variable properties in sakai.properties?  E.g. use more files?
       - add release "flavor" e.g. standard, pilot, debug (for better log messages)
  -->

  <import file="./build-type-util.xml" />

  <!-- register pieces to build -->
  <import file="./build-ctools.xml" />
  <import file="./build-mc.xml" /> 
  <import file="./build-ufp-um.xml" />
  <import file="./build-melete.xml" />
  <import file="./build-sakai.xml" />
  <import file="./build-osp.xml" />
  <import file="./build-samigo.xml" />

  <!-- ========================= -->
  <!-- secondary targets   These are customized based on the needs of the particular build.  -->
  <!-- ========================= -->

  <!-- Assemble the desired source files. -->
  <target name="getSource" 
	  depends="getSakaiSrc,getCtoolsSrc,extractMelete,getUfpUmSrc,getOSPSrc"
	  description="get the source for sakai and required tools."/>

  <!-- Make changes in the source that may be required for this installation. -->
  <target name="editSource" depends="editCtools,editSamigo,editMelete" description="Modify/customize source as necessary."/>


  <!-- =============================== -->
  <!--         image targets           -->
  <!-- =============================== -->


  <target name="modifyImage"  depends="imageSakai,imageMelete" />


  <target name="buildConfig" 
	  description="Customize the properties files on an instance by instance basis.">

    <buildPropertiesFile instanceName="ctools" />
    <buildPropertiesFile instanceName="ctoolsload" />
    <buildPropertiesFile instanceName="testctools" />
    <!--
    <buildPropertiesFile instanceName="whisk" />
    -->

  </target>


</project>
