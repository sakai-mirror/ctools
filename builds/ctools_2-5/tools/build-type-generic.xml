<project name="build-type-generic" basedir="." default="info" >

  <!--

This is a generic build file that supplies default implementations of targets
that can be overriden for a specific build.

This should be included into each build type script.

$Id$
$HeadURL$


The generic targets are:
getSource
editSource
modifyImage
buildConfig.
7
The targets that can be overridden for a specific build type are:
getBuildTypeSrc - add dependencies for source specific to this build.
editBuildType - add dependencies to change source for tools in this build.
imageBuildType - add dependencies to customize image.  (Should not be necessary to overrride.)
createConfig - add dependencies to customize which instances have properties files build for them.
(May not be necessary to override.)

  -->

  <!-- 
       TTD:
       - order is first gets it, so read local project.properties first
       - change logging format (e.g. use the Josh format)
       - easier way to set variable properties in sakai.properties?  E.g. use more files?
  -->

  <!-- if we build ctools we will always want these. -->

  <!-- register the pieces to build -->
  <import file="./build-ctools.xml" />
  <import file="./build-sakai.xml" />

  <!--
      Other imports for specific tools can be placed in the build specific file.
      -->

  <!-- ========================= -->
  <!-- 
       Primary targets.  These are called for the phases of the build.
       There should be no need to override them since they will call a default target
       that can be overridden for each type of build.
  -->
  <!-- ========================= -->

  <!-- Assemble the desired source files. -->

  <target name="getSource" 
	  depends="getSakaiSrc,getCtoolsSrc,getBuildTypeSrc,printBuildInfo,removeUnneededSakai"
	  description="get the source for sakai and required tools." >

    <echo> 
      Document which non-default source was extracted.  The
      source is extracted if property is set.  The value of the property
      doesn't matter. 
    </echo>
    <echo> ctools source ctools.extract.skip = [${ctools.extract.skip}]</echo>
  </target>

  <!-- Make changes in the source that may be required for this installation. -->
  <target name="editSource" depends="editCtools,editBuildTypeSrc"
	  description="Modify/customize source as necessary."/>

  <target name="modifyImage"  depends="imageSakai,imageBuildType" />

  <!-- configuration targets -->
  <!-- These build specific configurations customized for this build type. 
  These defaults are useful for most builds.
  -->

  <target name="buildConfig" depends="createConfig,bundleConfig"
	  description="Customize the properties files on an instance by instance basis."/>

  <!-- move to util script -->
  <target name="bundleConfig">
    <tar basedir="${instances.dir}" destfile="${image.dest.dir}/instanceProperties.${sakai.tag}.tar" 
	 longfile="gnu" compression="none" />
  </target>

  <target name="createConfig" 
	  description="Customize the properties files on an instance by instance basis.">

    <for list="${instances}" delimiter="," param="instanceName">
	<sequential>
	<buildPropertiesFileSimple instanceName="@{instanceName}" />
        </sequential>
    </for>
    
  </target>


  <!-- ========================= -->
  <!-- 
       Custom targets.  The primary targets depend on these.  They can be overridden for each build type, 
       providing a way to customize builds.

       Default values for these are provided here.
  -->
  <!-- ========================= -->


  <target name="getBuildTypeSrc"
	  description="override to include source for specific type of build." >
    <echo> Use default getBuildTypeSrc</echo>
  </target>


  <target name="editBuildTypeSrc" 
	  description="override to include editing for specific type of build." >
    <echo> Use default editBuildTypeSrc</echo>
  </target>


  <target name="imageBuildType"
	  description="override to affect image build for specific build type." >
    <echo> Use default imageBuildTypeSrc</echo>
  </target>


</project>
