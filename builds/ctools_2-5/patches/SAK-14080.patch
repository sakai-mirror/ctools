Index: announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/tool/AnnouncementAction.java
===================================================================
--- announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/tool/AnnouncementAction.java	(revision 49375)
+++ announcement/announcement-tool/tool/src/java/org/sakaiproject/announcement/tool/AnnouncementAction.java	(working copy)
@@ -1022,7 +1022,12 @@
 			Collection groups = channel.getGroupsAllowGetMessage();
 			if (groups != null && groups.size() > 0)
 			{
-				context.put("groups", groups);
+				Collection sortedGroups = new Vector();
+				for (Iterator i = new SortedIterator(groups.iterator(), new AnnouncementComparator(SORT_GROUPTITLE, true)); i.hasNext();)
+				{
+					sortedGroups.add(i.next());
+				}
+				context.put("groups", sortedGroups);
 			}
 		}
 
@@ -1777,18 +1782,8 @@
 
 				if (groups.size() > 0)
 				{
-					String sort = (String) sstate.getAttribute(STATE_CURRENT_SORTED_BY);
-					boolean asc = sstate.getAttribute(STATE_CURRENT_SORT_ASC) != null ? ((Boolean) sstate
-							.getAttribute(STATE_CURRENT_SORT_ASC)).booleanValue() : true;
-					if (sort == null || (!sort.equals(SORT_GROUPTITLE) && !sort.equals(SORT_GROUPDESCRIPTION)))
-					{
-						sort = SORT_GROUPTITLE;
-						sstate.setAttribute(STATE_CURRENT_SORTED_BY, sort);
-						state.setCurrentSortedBy(sort);
-						state.setCurrentSortAsc(Boolean.TRUE.booleanValue());
-					}
 					Collection sortedGroups = new Vector();
-					for (Iterator i = new SortedIterator(groups.iterator(), new AnnouncementComparator(sort, asc)); i.hasNext();)
+					for (Iterator i = new SortedIterator(groups.iterator(), new AnnouncementComparator(SORT_GROUPTITLE, true)); i.hasNext();)
 					{
 						sortedGroups.add(i.next());
 					}
