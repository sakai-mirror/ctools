Index: site/site-impl/impl/src/java/org/sakaiproject/site/impl/BaseSiteService.java
===================================================================
--- site/site-impl/impl/src/java/org/sakaiproject/site/impl/BaseSiteService.java	(revision 48427)
+++ site/site-impl/impl/src/java/org/sakaiproject/site/impl/BaseSiteService.java	(working copy)
@@ -507,22 +507,20 @@
 		return rv;
 	}
 
-	/**
-	 * Access an already defined site object.
-	 * 
-	 * @param id
-	 *        The site id string.
-	 * @return A site object containing the site information
-	 * @exception IdUnusedException
-	 *            if not found
-	 */
-	protected Site getDefinedSite(String id) throws IdUnusedException
-	{
-		if (id == null) throw new IdUnusedException("<null>");
+        /**
+         * Access site object from Cache (if available)
+         * 
+         * @param id
+         *        The site id string.
+         * @return A site object containing the site information or null
+         *            if not found
+         */
+        protected Site getCachedSite(String id)
+        {
+                if (id == null) return null;
 
-		Site rv = null;
+                Site rv = null;
 
-		// check the cache
 		String ref = siteReference(id);
 		if ((m_siteCache != null) && (m_siteCache.containsKey(ref)))
 		{
@@ -538,7 +536,26 @@
 				return rv;
 			}
 		}
+                return null;
+        }
 
+	/**
+	 * Access an already defined site object.
+	 * 
+	 * @param id
+	 *        The site id string.
+	 * @return A site object containing the site information
+	 * @exception IdUnusedException
+	 *            if not found
+	 */
+	protected Site getDefinedSite(String id) throws IdUnusedException
+	{
+		if (id == null) throw new IdUnusedException("<null>");
+
+		// Check the cache
+		Site rv = getCachedSite(id);
+		if ( rv != null ) return rv;
+
 		rv = m_storage.get(id);
 
 		// if not found
@@ -553,6 +570,7 @@
 		// cache a copy
 		if (m_siteCache != null)
 		{
+			String ref = siteReference(id);
 			Site copy = new BaseSite(rv, true);
 			m_siteCache.put(ref, copy, m_cacheSeconds);
 		}
Index: site/site-impl/impl/src/java/org/sakaiproject/site/impl/DbSiteService.java
===================================================================
--- site/site-impl/impl/src/java/org/sakaiproject/site/impl/DbSiteService.java	(revision 48427)
+++ site/site-impl/impl/src/java/org/sakaiproject/site/impl/DbSiteService.java	(working copy)
@@ -31,6 +31,7 @@
 import java.util.Map;
 import java.util.Properties;
 import java.util.Set;
+import java.util.ArrayList;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -777,7 +778,28 @@
 				rv = getSelectedResources(where.toString(), order, fields, join);
 			}
 
-			return rv;
+			if ( m_siteCache == null ) return rv;
+
+                        // Loop through the sites to see if we have cached copies 
+                        // of the sites
+                        List newrv = new ArrayList();
+
+                        int count = 0;
+                        for ( Site s : (List<Site>) rv) {
+                                Site news = getCachedSite(s.getId());
+                                if ( news != null )
+                                {
+                                        newrv.add(news);
+                                        count++;
+                                }
+                                else
+                                {
+                                        newrv.add(s);
+                                }
+                        }
+			// System.out.println("Returning cache="+count);
+                        return newrv;
+
 		}
 
 		/**
