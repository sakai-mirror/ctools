svn diff -r18148:18149 https://source.sakaiproject.org/svn
Index: rwiki/rwiki-tool/tool/src/java/uk/ac/cam/caret/sakai/rwiki/tool/service/impl/PopulateServiceImpl.java
===================================================================
--- rwiki/rwiki-tool/tool/src/java/uk/ac/cam/caret/sakai/rwiki/tool/service/impl/PopulateServiceImpl.java	(revision 18148)
+++ rwiki/rwiki-tool/tool/src/java/uk/ac/cam/caret/sakai/rwiki/tool/service/impl/PopulateServiceImpl.java	(revision 18149)
@@ -24,7 +24,6 @@
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
-import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
@@ -48,13 +47,10 @@
  * @author andrew
  */
 
-// FIXME: Tool
 public class PopulateServiceImpl implements PopulateService
 {
 	private static Log log = LogFactory.getLog(PopulateServiceImpl.class);
 
-	private HashMap seenPageSpaces = new HashMap();
-
 	private List seedPages;
 
 	private RWikiCurrentObjectDao dao;
@@ -110,80 +106,72 @@
 	public void populateRealm(String user, String space, String group)
 			throws PermissionException
 	{
-		synchronized (seenPageSpaces)
+		String owner = user;
+		Site s = null;
+		try
 		{
-			if (seenPageSpaces.get(space) == null)
+			s = siteService.getSite(ToolManager.getCurrentPlacement()
+					.getContext());
+			owner = s.getCreatedBy().getId();
+		}
+		catch (Exception e)
+		{
+			log
+					.warn("Cant find who created this site, defaulting to current user for prepopulate ownership :"
+							+ owner);
+		}
+		if (s == null)
+		{
+			log
+					.error("Cant Locate current site, will populate only global pages with no restrictions");
+		}
+		if (log.isDebugEnabled())
+		{
+			log.debug("Populating space: " + space);
+		}
+
+		for (Iterator i = seedPages.iterator(); i.hasNext();)
+		{
+
+			RWikiCurrentObject seed = (RWikiCurrentObject) i.next();
+			List targetTypes = seed.getTargetSiteTypes();
+			if (ignoreSeedPage(s, targetTypes))
 			{
-				String owner = user;
-				Site s = null;
-				try
-				{
-					s = siteService.getSite(ToolManager.getCurrentPlacement()
-							.getContext());
-					owner = s.getCreatedBy().getId();
-				}
-				catch (Exception e)
-				{
-					log
-							.warn("Cant find who created this site, defaulting to current user for prepopulate ownership :"
-									+ owner);
-				}
-				if (s == null)
-				{
-					log
-							.error("Cant Locate current site, will populate only global pages with no restrictions");
-				}
+				log.debug("Ignoring Seed page " + seed.getName());
+				continue;
+			}
+
+			String name = NameHelper.globaliseName(seed.getName(), space);
+			log.debug("Populating Space with " + seed.getName());
+			if (dao.findByGlobalName(name) == null)
+			{
 				if (log.isDebugEnabled())
 				{
-					log.debug("Populating space: " + space);
+					log.debug("Creating Page: " + name);
 				}
-				for (Iterator i = seedPages.iterator(); i.hasNext();)
-				{
+				log.debug("Creating Page :" + name);
 
-					RWikiCurrentObject seed = (RWikiCurrentObject) i.next();
-					if (seed instanceof RWikiCurrentObject)
-					{
-						RWikiCurrentObject seedimpl = (RWikiCurrentObject) seed;
-						List targetTypes = seedimpl.getTargetSiteTypes();
-						if (ignoreSeedPage(s, targetTypes))
-						{
-							log.debug("Ignoring Seed page " + seed.getName());
-							continue;
-						}
-					}
+				RWikiCurrentObject rwo = dao.createRWikiObject(name, space);
+				seed.copyTo(rwo);
+				// SAK-2513
 
-					String name = NameHelper.globaliseName(seed.getName(),
-							space);
-					log.debug("Populating Space with " + seed.getName());
-					if (dao.findByGlobalName(name) == null)
-					{
-						if (log.isDebugEnabled())
-						{
-							log.debug("Creating Page: " + name);
-						}
-						log.debug("Creating Page :" + name);
-
-						RWikiCurrentObject rwo = dao.createRWikiObject(name,
-								space);
-						seed.copyTo(rwo);
-						// SAK-2513
-
-						log.debug("Populate with Owner " + owner);
-						rwo.setUser(owner);
-						rwo.setOwner(owner);
-						updateReferences(rwo, space);
-						rwo.setName(name);
-						rwo.setRealm(group);
-						dao.update(rwo, null);
-						log.debug("Page Created ");
-					}
-					else
-					{
-						log.debug("Page Already exists ");
-					}
-				}
-				seenPageSpaces.put(space, space);
+				log.debug("Populate with Owner " + owner);
+				rwo.setUser(owner);
+				rwo.setOwner(owner);
+				updateReferences(rwo, space);
+				rwo.setName(name);
+				rwo.setRealm(group);
+				dao.update(rwo, null);
+				log.debug("Page Created ");
 			}
+			else
+			{
+				log.debug("Page Already exists ");
+				// This is the fast exit route, but if the list of seed pages
+				// changes, and there are new ones before the olde ones
+				// then the new ones will be added to the space.
+				break;
+			}
 		}
 	}
 
@@ -278,9 +266,11 @@
 				referenced.add(NameHelper.globaliseName(name, currentRealm));
 			}
 
-			public void appendLink(StringBuffer buffer, String name, String view, String anchor, boolean autoGenerated)
+			public void appendLink(StringBuffer buffer, String name,
+					String view, String anchor, boolean autoGenerated)
 			{
-				if (!autoGenerated) {
+				if (!autoGenerated)
+				{
 					this.appendLink(buffer, name, view, anchor);
 				}
 			}
@@ -297,12 +287,12 @@
 
 			public void setCachable(boolean cachable)
 			{
-				//do nothing
+				// do nothing
 			}
 
 			public void setUseCache(boolean b)
 			{
-				//do nothing
+				// do nothing
 			}
 
 		};
