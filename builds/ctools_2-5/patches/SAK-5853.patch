svn diff -r14910:14911 https://source.sakaiproject.org/svn
Index: assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
===================================================================
--- assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(revision 14910)
+++ assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(revision 14911)
@@ -378,6 +378,8 @@
 	private static final String NEW_ASSIGNMENT_DESCRIPTION_EMPTY = "new_assignment_description_empty";
 
 	private static final String NEW_ASSIGNMENT_ADD_TO_GRADEBOOK = "new_assignment_add_to_gradebook";
+	
+	private static final String NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT = "new_assignment_associate_gradebook_assignment";
 
 	private static final String NEW_ASSIGNMENT_RANGE = "new_assignment_range";
 
@@ -981,6 +983,7 @@
 		if (withGrade)
 		{
 			context.put("name_Addtogradebook", NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
+			context.put("name_AssociateGradebookAssignment", NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT);
 		}
 		// gradebook integration
 		context.put("withGradebook", Boolean.valueOf(isGradebookDefined()));
@@ -1023,7 +1026,36 @@
 		String s = (String) state.getAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE);
 		if (s == null) s = "1";
 		context.put("value_CheckAddHonorPledge", s);
-		context.put("value_AddToGradebook", state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK));
+		
+		// get all available assignments from Gradebook tool except for those created from
+		boolean gradebookExists = isGradebookDefined();
+		if (gradebookExists)
+		{
+			GradebookService g = (GradebookService) (org.sakaiproject.service.gradebook.shared.GradebookService) ComponentManager.get("org.sakaiproject.service.gradebook.GradebookService");
+			String gradebookUid = ToolManager.getInstance().getCurrentPlacement().getContext();
+			
+			// get all assignments in Gradebook
+			List gradebookAssignments = g.getAssignments(gradebookUid);
+			List gradebookAssignmentsExceptSamigo = new Vector();
+			
+			// filtering out those from Samigo
+			for (Iterator i=gradebookAssignments.iterator(); i.hasNext();)
+			{
+				org.sakaiproject.service.gradebook.shared.Assignment gAssignment = (org.sakaiproject.service.gradebook.shared.Assignment) i.next();
+				if (!gAssignment.isExternallyMaintained() || gAssignment.isExternallyMaintained() && gAssignment.getExternalAppName().equals(getToolTitle()))
+				{
+					gradebookAssignmentsExceptSamigo.add(gAssignment);
+				}
+			}
+			context.put("gradebookAssignments", gradebookAssignmentsExceptSamigo);
+			if (StringUtil.trimToNull((String) state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK)) == null)
+			{
+				state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, "no");
+			}
+			context.put("gradebookChoice", state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK));
+			
+			context.put("associateGradebookAssignment", state.getAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT));
+		}
 
 		context.put("monthTable", monthTable());
 		context.put("gradeTypeTable", gradeTypeTable());
@@ -1604,6 +1636,7 @@
 	 * 
 	 * @param state
 	 * @param assignmentRef Assignment reference
+	 * @param associateGradebookAssignment The title for the associated GB assignment
 	 * @param addUpdateRemoveAssignment "add" for adding the assignment; "update" for updating the assignment; "remove" for remove assignment
 	 * @param oldAssignment_title The original assignment title
 	 * @param newAssignment_title The updated assignment title
@@ -1612,7 +1645,7 @@
 	 * @param submissionRef Any submission grade need to be updated? Do bulk update if null
 	 * @param updateRemoveSubmission "update" for update submission;"remove" for remove submission
 	 */
-	protected void integrateGradebook (SessionState state, String assignmentRef, String addUpdateRemoveAssignment, String oldAssignment_title, String newAssignment_title, int newAssignment_maxPoints, Time newAssignment_dueTime, String submissionRef, String updateRemoveSubmission)
+	protected void integrateGradebook (SessionState state, String assignmentRef, String associateGradebookAssignment, String addUpdateRemoveAssignment, String oldAssignment_title, String newAssignment_title, int newAssignment_maxPoints, Time newAssignment_dueTime, String submissionRef, String updateRemoveSubmission)
 	{
 		// add or remove external grades to gradebook
 		// a. if Gradebook does not exists, do nothing, 'cos setting should have been hidden
@@ -1623,22 +1656,25 @@
 
 		if (gradebookExists)
 		{
+			String assignmentToolTitle = getToolTitle();
+			
 			GradebookService g = (GradebookService) (org.sakaiproject.service.gradebook.shared.GradebookService) ComponentManager.get("org.sakaiproject.service.gradebook.GradebookService");
 			String gradebookUid = ToolManager.getInstance().getCurrentPlacement().getContext();
 			boolean isExternalAssignmentDefined=g.isExternalAssignmentDefined(gradebookUid, assignmentRef);
+			boolean isExternalAssociateAssignmentDefined = g.isExternalAssignmentDefined(gradebookUid, associateGradebookAssignment);
+			boolean isAssignmentDefined = g.isAssignmentDefined(gradebookUid, associateGradebookAssignment);
 
 			if (addUpdateRemoveAssignment != null)
 			{
 				// add an entry into Gradebook for newly created assignment or modified assignment, and there wasn't a correspond record in gradebook yet
-				if ((addUpdateRemoveAssignment.equals("add") || addUpdateRemoveAssignment.equals("update")) 
-					&& !isExternalAssignmentDefined)
+				if ((addUpdateRemoveAssignment.equals("add") || (addUpdateRemoveAssignment.equals("update") && !isExternalAssignmentDefined)) && StringUtil.trimToNull(associateGradebookAssignment) == null)
 				{
 					// add assignment into gradebook
 					try
 					{
 						// add assignment to gradebook
 						g.addExternalAssessment(gradebookUid, assignmentRef, null, newAssignment_title,
-								newAssignment_maxPoints/10.0, new Date(newAssignment_dueTime.getTime()), getToolTitle());
+								newAssignment_maxPoints/10.0, new Date(newAssignment_dueTime.getTime()), assignmentToolTitle);
 					}
 					catch (AssignmentHasIllegalPointsException e)
 					{
@@ -1668,7 +1704,7 @@
 				else if (addUpdateRemoveAssignment.equals("update"))
 				{
 					// is there such record in gradebook?
-					if (isExternalAssignmentDefined)
+					if (isExternalAssignmentDefined && associateGradebookAssignment == null)
 					{
 						try
 						{
@@ -1686,7 +1722,7 @@
 				else if (addUpdateRemoveAssignment.equals("remove"))
 				{
 					// remove assignment and all submission grades
-					if (isExternalAssignmentDefined)
+					if (isExternalAssignmentDefined && associateGradebookAssignment == null)
 					{
 						try
 						{
@@ -1709,9 +1745,8 @@
 
 					if (updateRemoveSubmission.equals("update")
 							&& a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK) != null
-							&& a.getProperties().getBooleanProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK)
-							&& a.getContent().getTypeOfGrade() == Assignment.SCORE_GRADE_TYPE
-							&& isExternalAssignmentDefined)
+							&& !a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK).equals("no")
+							&& a.getContent().getTypeOfGrade() == Assignment.SCORE_GRADE_TYPE)
 					{
 						if (submissionRef == null)
 						{
@@ -1733,7 +1768,31 @@
 							// need to update only when there is at least one submission
 							if (m.size()>0)
 							{
-								g.updateExternalAssessmentScores(gradebookUid, assignmentRef, m);
+								if (associateGradebookAssignment != null)
+								{
+									if (isExternalAssociateAssignmentDefined)
+									{
+										// the associated assignment is externally maintained
+										g.updateExternalAssessmentScores(gradebookUid, associateGradebookAssignment, m);
+									}
+									else if (isAssignmentDefined)
+									{
+										// the associated assignment is internal one, update records one by one
+										submissions = AssignmentService.getSubmissions(a);
+										while (submissions.hasNext())
+										{
+											AssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();
+											User[] submitters = aSubmission.getSubmitters();
+											String submitterId = submitters[0].getId();
+											Double grade = StringUtil.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,aSubmission.getGrade())) : null;
+											g.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitterId, grade, assignmentToolTitle);
+										}
+									}
+								}
+								else if (isExternalAssignmentDefined)
+								{
+									g.updateExternalAssessmentScores(gradebookUid, assignmentRef, m);
+								}
 							}
 						}
 						else
@@ -1745,9 +1804,28 @@
 										.getSubmission(submissionRef);
 								User[] submitters = aSubmission.getSubmitters();
 								
-								g.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), StringUtil
-										.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,
-										aSubmission.getGrade())) : null);
+								if (associateGradebookAssignment != null)
+								{
+									if (g.isExternalAssignmentDefined(gradebookUid, associateGradebookAssignment))
+									{
+										// the associated assignment is externally maintained
+										g.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), StringUtil
+												.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,
+												aSubmission.getGrade())) : null);
+									}
+									else if (g.isAssignmentDefined(gradebookUid, associateGradebookAssignment))
+									{
+										// the associated assignment is internal one, update records
+										g.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), 
+															StringUtil.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,aSubmission.getGrade())) : null, assignmentToolTitle);
+									}
+								}
+								else
+								{
+									g.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), StringUtil
+											.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,
+											aSubmission.getGrade())) : null);
+								}
 							}
 							catch (Exception e)
 							{
@@ -1768,7 +1846,10 @@
 							{
 								AssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();
 								User[] submitters = aSubmission.getSubmitters();
-								g.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), null);
+								if (g.isExternalAssignmentDefined(gradebookUid, assignmentRef))
+								{
+									g.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), null);
+								}
 							}
 						}
 						else
@@ -2411,15 +2492,18 @@
 				AssignmentService.commitEdit(sEdit);
 
 				// update grades in gradebook
+				String aReference = a.getReference();
+				String associateGradebookAssignment = StringUtil.trimToNull(a.getProperties().getProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT));
+				
 				if (gradeOption.equals("release") || gradeOption.equals("return"))
 				{
 					// update grade in gradebook
-					integrateGradebook(state, a.getReference(), null, null, null, -1, null, sReference, "update");
+					integrateGradebook(state, aReference, associateGradebookAssignment, null, null, null, -1, null, sReference, "update");
 				}
 				else
 				{
 					// remove grade from gradebook
-					integrateGradebook(state, a.getReference(), null, null, null, -1, null, sReference, "remove");
+					integrateGradebook(state, aReference, associateGradebookAssignment, null, null, null, -1, null, sReference, "remove");
 				}
 
 			} // if
@@ -3038,21 +3122,30 @@
 		if (s == null) s = "1";
 		state.setAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE, s);
 
-		if (params.getString(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK) != null
-				&& params.getString(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK).equalsIgnoreCase(Boolean.TRUE.toString()))
+		String grading = params.getString(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
+		state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, grading);
+		
+		String associateAssignment = params.getString(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT);
+		state.setAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, associateAssignment);
+		
+		if (grading != null)
 		{
-			state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, Boolean.TRUE.toString());
-			if (gradeType != Assignment.SCORE_GRADE_TYPE)
+			if (!grading.equals("no"))
 			{
 				// gradebook integration only available to point-grade assignment
-				addAlert(state, rb.getString("addtogradebook.wrongGradeScale"));
+				if (gradeType != Assignment.SCORE_GRADE_TYPE)
+				{
+					addAlert(state, rb.getString("addtogradebook.wrongGradeScale"));
+				}
+				
+				// if chosen as "associate", have to choose one assignment from Gradebook
+				if (grading.equals("associate") && StringUtil.trimToNull(associateAssignment) == null)
+				{
+					addAlert(state, rb.getString("grading.associate.alert"));
+				}
 			}
 		}
-		else
-		{
-			state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, Boolean.FALSE.toString());
-		}
-
+		
 		List attachments = (List) state.getAttribute(ATTACHMENTS);
 		state.setAttribute(NEW_ASSIGNMENT_ATTACHMENT, attachments);
 
@@ -3380,13 +3473,13 @@
 			String checkAddHonorPledge = (String) state.getAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE);
 
 			String addtoGradebook = (String) state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
+			
+			String associateGradebookAssignment = (String) state.getAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT);
 
 			// the attachments
 			List attachments = (List) state.getAttribute(ATTACHMENTS);
 			List attachments1 = EntityManager.newReferenceList(attachments);
 
-			boolean newAssignment = true;
-
 			// correct inputs
 			if (state.getAttribute(STATE_MESSAGE) == null)
 			{
@@ -3454,9 +3547,6 @@
 				}
 				else
 				{
-					// not a new assignment
-					newAssignment = false;
-
 					try
 					{
 						// edit assignment
@@ -3579,6 +3669,7 @@
 					}
 					aPropertiesEdit.addProperty(ResourceProperties.NEW_ASSIGNMENT_CHECK_AUTO_ANNOUNCE, checkAutoAnnounce);
 					aPropertiesEdit.addProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, addtoGradebook);
+					aPropertiesEdit.addProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, associateGradebookAssignment);
 
 					// set group property
 					String range = (String) state.getAttribute(NEW_ASSIGNMENT_RANGE);
@@ -3896,8 +3987,9 @@
 							// integrate with Gradebook
 							String aReference = a.getReference();
 							String addUpdateRemoveAssignment = "remove";
-							if (Boolean.valueOf(addtoGradebook).booleanValue())
+							if (!addtoGradebook.equals("no"))
 							{
+								// if integrate with Gradebook
 								if (!AssignmentService.getAllowGroupAssignmentsInGradebook() && (range.equals("groups")))
 								{
 									// if grouped assignment is not allowed to add into Gradebook
@@ -3908,6 +4000,7 @@
 										ref = a.getReference();
 										AssignmentEdit aEdit = AssignmentService.editAssignment(ref);
 										aEdit.getPropertiesEdit().removeProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
+										aEdit.getPropertiesEdit().removeProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT);
 										AssignmentService.commitEdit(aEdit);
 									}
 									catch (Exception ignore)
@@ -3915,15 +4008,15 @@
 										// ignore the exception
 										Log.warn("chef", rb.getString("cannotfin2") + ref);
 									}
-									integrateGradebook(state, aReference, "remove", null, null, -1, null, null, null);
+									integrateGradebook(state, aReference, associateGradebookAssignment, "remove", null, null, -1, null, null, null);
 								}
 								else
 								{
-									if (newAssignment)
+									if (addtoGradebook.equals("add"))
 									{
 										addUpdateRemoveAssignment = "add";
 									}
-									else
+									else if (addtoGradebook.equals("associate"))
 									{
 										addUpdateRemoveAssignment = "update";
 									}
@@ -3932,11 +4025,10 @@
 									{
 										try
 										{
-											// no assignment committed yet. Use user input data
-											integrateGradebook(state, aReference, addUpdateRemoveAssignment, aOldTitle, title, Integer.parseInt (gradePoints), dueTime, null, null);
+											integrateGradebook(state, aReference, associateGradebookAssignment, addUpdateRemoveAssignment, aOldTitle, title, Integer.parseInt (gradePoints), dueTime, null, null);
 											
 											// add all existing grades, if any, into Gradebook
-											integrateGradebook(state, aReference, null, null, null, -1, null, null, "update");
+											integrateGradebook(state, aReference, associateGradebookAssignment, null, null, null, -1, null, null, "update");
 										}
 										catch (NumberFormatException nE)
 										{
@@ -3945,14 +4037,14 @@
 									}
 									else
 									{
-										integrateGradebook(state, aReference, "remove", null, null, -1, null, null, null);
+										integrateGradebook(state, aReference, associateGradebookAssignment, "remove", null, null, -1, null, null, null);
 									}
 								}
 							}
 							else
 							{
 								// remove assignment entry from Gradebook
-								integrateGradebook(state, aReference, "remove", null, null, -1, null, null, null);
+								integrateGradebook(state, aReference, associateGradebookAssignment, "remove", null, null, -1, null, null, null);
 							}
 						}	// if post
 						
@@ -4180,6 +4272,7 @@
 					ResourceProperties.NEW_ASSIGNMENT_CHECK_AUTO_ANNOUNCE));
 			state.setAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE, Integer.toString(a.getContent().getHonorPledge()));
 			state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK));
+			state.setAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, a.getProperties().getProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT));
 			state.setAttribute(ATTACHMENTS, a.getContent().getAttachments());
 
 			// group setting
@@ -4262,6 +4355,9 @@
 				AssignmentEdit aEdit = AssignmentService.editAssignment(assignmentId);
 
 				ResourcePropertiesEdit pEdit = aEdit.getPropertiesEdit();
+
+				String associateGradebookAssignment = pEdit.getProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT);
+				
 				String title = aEdit.getTitle();
 
 				// remove releted event if there is one
@@ -4351,7 +4447,7 @@
 				}
 
 				// remove from Gradebook
-				integrateGradebook(state, (String) ids.get (i), "remove", null, null, -1, null, null, null);
+				integrateGradebook(state, (String) ids.get (i), associateGradebookAssignment, "remove", null, null, -1, null, null, null);
 			}
 			catch (InUseException e)
 			{
@@ -4573,7 +4669,14 @@
 			} // while
 			
 			// add grades into Gradebook
-			integrateGradebook(state, aReference, null, null, null, -1, null, null, "update");
+			String integrateWithGradebook = a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
+			if (integrateWithGradebook != null && !integrateWithGradebook.equals("no"))
+			{
+				// integrate with Gradebook
+				String associateGradebookAssignment = StringUtil.trimToNull(a.getProperties().getProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT));
+				
+				integrateGradebook(state, aReference, associateGradebookAssignment, null, null, null, -1, null, null, "update");
+			}
 		}
 		catch (IdUnusedException e)
 		{
@@ -5305,7 +5408,7 @@
 		// make the honor pledge not include as the default
 		state.setAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE, (new Integer(Assignment.HONOR_PLEDGE_NONE)).toString());
 
-		state.removeAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
+		state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, "no");
 
 		state.setAttribute(NEW_ASSIGNMENT_ATTACHMENT, EntityManager.newReferenceList());
 
Index: assignment/assignment-tool/tool/src/bundle/assignment.properties
===================================================================
--- assignment/assignment-tool/tool/src/bundle/assignment.properties	(revision 14910)
+++ assignment/assignment-tool/tool/src/bundle/assignment.properties	(revision 14911)
@@ -591,4 +591,10 @@
 status.noSubmission = No Submission
 nostudent = There is no student in the site.
 
+grading=Grading
+grading.no=Do not add assignment to Gradebook
+grading.add=Add Assignment to Gradebook
+grading.associate=Associate with existing Gradebook assignment
+grading.associate.alert=You must select a gradebook assignment.
+grading.select=Select an Assignment
 
Index: assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm
===================================================================
--- assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(revision 14910)
+++ assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(revision 14911)
@@ -392,14 +392,50 @@
 					#set ($listDisplay="block")
 				#end
 				<p id="addToGradebook" class="checkbox  indnt1" style="display:$listDisplay">
-					#if ($!value_AddToGradebook.equalsIgnoreCase("true"))
-						<input id="$!name_Addtogradebook" name="$name_Addtogradebook" type="checkbox" value="true" checked="checked"/>
-					#else
-						<input id="$!name_Addtogradebook" name="$name_Addtogradebook" type="checkbox" value="true"/>
-					#end
-					<label for="$name_Addtogradebook">
-						$!tlang.getString('addtogradebook')
-					</label>
+					$!tlang.getString('grading')
+					<table id="gradebookTable" style="width:80%;" class="listHier lines indnt3" border="0" cellspacing="0" summary="">
+						<tr>
+							<td>
+								<input type="radio" name="$!name_Addtogradebook" id="$!name_Addtogradebook" value="no" #if($!gradebookChoice.equals("no"))checked#end>
+							</td>
+							<td>
+								$tlang.getString("grading.no")
+							</td>
+						</tr>
+						<tr>
+							<td>
+								<input type="radio" name="$!name_Addtogradebook" id="$!name_Addtogradebook" value="add" #if($!gradebookChoice.equals("add"))checked#end>
+							</td>
+							<td>
+								$tlang.getString("grading.add")
+							</td>
+						</tr>
+						## if there exists properiate assignment entries in Gradebook
+						#if ($!gradebookAssignments.size() > 0) 
+							<tr>
+								<td>
+									<input type="radio" name="$!name_Addtogradebook" id="$!name_Addtogradebook" value="associate" #if($!gradebookChoice.equals("associate"))checked#end>
+								</td>
+								<td>
+									$tlang.getString("grading.associate")
+									<br />
+									<select name="$!name_AssociateGradebookAssignment" id="$!name_AssociateGradebookAssignment">
+										<option  value="">$tlang.getString("grading.select")</option>
+										#foreach ($aAssignment in $!gradebookAssignments)
+											#if ($aAssignment.isExternallyMaintained())
+												## for external assignment
+												<option  value="$aAssignment.getExternalId()" #if($!associateGradebookAssignment.equals($aAssignment.Name))selected="selected"#end)>$aAssignment.Name</option>
+											#else
+												## for internal assignment
+												<option  value="$aAssignment.Name" #if($!associateGradebookAssignment.equals($aAssignment.Name))selected="selected"#end)>$aAssignment.Name</option>
+											#end
+										#end
+									</select>
+									
+								</td>
+							</tr>
+						#end
+					</table>
 				</p>
 			#end
 			## group/section support
svn diff -r14942:14943 https://source.sakaiproject.org/svn
Index: assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
===================================================================
--- assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(revision 14942)
+++ assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(revision 14943)
@@ -1201,7 +1201,13 @@
 		context.put("value_CheckAddDueDate", state.getAttribute(ResourceProperties.NEW_ASSIGNMENT_CHECK_ADD_DUE_DATE));
 		context.put("value_CheckAutoAnnounce", state.getAttribute(ResourceProperties.NEW_ASSIGNMENT_CHECK_AUTO_ANNOUNCE));
 		context.put("value_CheckAddHonorPledge", state.getAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE));
-		context.put("value_AddToGradebook", state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK));
+		
+		// get all available assignments from Gradebook tool except for those created from
+		if (isGradebookDefined())
+		{
+			context.put("gradebookChoice", state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK));
+			context.put("associateGradebookAssignment", state.getAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT));
+		}
 
 		context.put("monthTable", monthTable());
 		context.put("gradeTypeTable", gradeTypeTable());
Index: assignment/assignment-tool/tool/src/bundle/assignment.properties
===================================================================
--- assignment/assignment-tool/tool/src/bundle/assignment.properties	(revision 14942)
+++ assignment/assignment-tool/tool/src/bundle/assignment.properties	(revision 14943)
@@ -598,3 +598,4 @@
 grading.associate.alert=You must select a gradebook assignment.
 grading.select=Select an Assignment
 
+access=Access
Index: assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm
===================================================================
--- assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(revision 14942)
+++ assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(revision 14943)
@@ -386,63 +386,61 @@
 				</label>
 			</p>
 			#if ($!withGrade && $!withGradebook)
-				#if(!$!allowGroupAssignmentsInGradebook && $!range=="groups")
-					#set ($listDisplay="none")
+				## show the "Add to Gradebook" choices or not
+				#if(!$!allowGroupAssignmentsInGradebook)
+					#set ($addToGBDisplay="none")
 				#else
-					#set ($listDisplay="block")
+					#set ($addToGBDisplay="block")
 				#end
-				<p id="addToGradebook" class="checkbox  indnt1" style="display:$listDisplay">
+				<p style="display:$!addToGBDisplay">
 					$!tlang.getString('grading')
-					<table id="gradebookTable" style="width:80%;" class="listHier lines indnt3" border="0" cellspacing="0" summary="">
-						<tr>
-							<td>
-								<input type="radio" name="$!name_Addtogradebook" id="$!name_Addtogradebook" value="no" #if($!gradebookChoice.equals("no"))checked#end>
-							</td>
-							<td>
-								$tlang.getString("grading.no")
-							</td>
-						</tr>
-						<tr>
-							<td>
-								<input type="radio" name="$!name_Addtogradebook" id="$!name_Addtogradebook" value="add" #if($!gradebookChoice.equals("add"))checked#end>
-							</td>
-							<td>
-								$tlang.getString("grading.add")
-							</td>
-						</tr>
+					<div class="checkbox  indnt2" style="display:$!addToGBDisplay">
+						## hide the assignment list from Gradebook when clicked
+						<input type="radio" name="$!name_Addtogradebook" id="no" value="no" #if($!gradebookChoice.equals("no"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';">
+						<label for="no">$tlang.getString("grading.no")</label>
+						<br/>
+						## hide the assignment list from Gradebook when clicked
+						<input type="radio" name="$!name_Addtogradebook" id="add" value="add" #if($!gradebookChoice.equals("add"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';">
+						<label for="add">$tlang.getString("grading.add")</label>
+						<br/>
 						## if there exists properiate assignment entries in Gradebook
 						#if ($!gradebookAssignments.size() > 0) 
-							<tr>
-								<td>
-									<input type="radio" name="$!name_Addtogradebook" id="$!name_Addtogradebook" value="associate" #if($!gradebookChoice.equals("associate"))checked#end>
-								</td>
-								<td>
-									$tlang.getString("grading.associate")
-									<br />
-									<select name="$!name_AssociateGradebookAssignment" id="$!name_AssociateGradebookAssignment">
-										<option  value="">$tlang.getString("grading.select")</option>
-										#foreach ($aAssignment in $!gradebookAssignments)
-											#if ($aAssignment.isExternallyMaintained())
-												## for external assignment
-												<option  value="$aAssignment.getExternalId()" #if($!associateGradebookAssignment.equals($aAssignment.Name))selected="selected"#end)>$aAssignment.Name</option>
-											#else
-												## for internal assignment
-												<option  value="$aAssignment.Name" #if($!associateGradebookAssignment.equals($aAssignment.Name))selected="selected"#end)>$aAssignment.Name</option>
-											#end
-										#end
-									</select>
-									
-								</td>
-							</tr>
+							## show the assignment list from Gradebook when clicked
+							<input type="radio" name="$!name_Addtogradebook" id="associate" value="associate" #if($!gradebookChoice.equals("associate"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'block';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'block';">
+							<label for="associate">$tlang.getString("grading.associate")</label>
 						#end
-					</table>
-				</p>
+					</div>
+				</p>	
+				## if there exists properiate assignment entries in Gradebook
+				#if ($!gradebookAssignments.size() > 0) 
+					## show the "Gradebook Assignment list" choices or not
+					#if($!allowGroupAssignmentsInGradebook && $!gradebookChoice.equals("associate"))
+						#set ($gbListDisplay="block")
+					#else
+						#set ($gbListDisplay="none")
+					#end
+					<p id="$!name_AssociateGradebookAssignment" class="checkbox  indnt2" style="display:$gbListDisplay">
+						<select name="$!name_AssociateGradebookAssignment" >
+							<option  value="">$tlang.getString("grading.select")</option>
+							#foreach ($aAssignment in $!gradebookAssignments)
+								#if ($aAssignment.isExternallyMaintained())
+									## for external assignment
+									<option  value="$aAssignment.getExternalId()" #if($!associateGradebookAssignment.equals($aAssignment.getExternalId()))selected="selected"#end)>$aAssignment.Name</option>
+								#else
+									## for internal assignment
+									<option  value="$aAssignment.Name" #if($!associateGradebookAssignment.equals($aAssignment.Name))selected="selected"#end)>$aAssignment.Name</option>
+								#end
+							#end
+						</select>
+					</p>
+				#end
 			#end
 			## group/section support
 			<br />
+			$!tlang.getString('access')
 			#if ($allowAddSiteAssignment)
 				#if ($!groups)
-					<p class="checkbox  indnt1">
+					<p class="checkbox  indnt2">
 						#if (!$!allowGroupAssignmentsInGradebook)
 							<input type="radio" name="range" id="site" value="site" #if($!range == "site")checked="checked"#end onclick="if (document.getElementById('addToGradebook') !=null){document.getElementById('addToGradebook').style.display = 'block'};document.getElementById('groupTable').style.display = 'none';" onkeypress="if (document.getElementById('addToGradebook') != null){document.getElementById('addToGradebook').style.display = 'block'};document.getElementById('groupTable').style.display = 'none';"/>
 						#else
@@ -463,7 +461,7 @@
 			#end
 			#if ($!groups)
 				## added group awareness
-				<p class="checkbox indnt1">
+				<p class="checkbox indnt2">
 					#if (!$!allowGroupAssignmentsInGradebook)
 						<input type="radio" name="range" id="groups" value="groups" #if($!range == "groups")checked="checked"#end onclick="if (document.getElementById('addToGradebook') != null){document.getElementById('addToGradebook').style.display = 'none';document.getElementById('$!name_Addtogradebook').checked=false};document.getElementById('groupTable').style.display = 'block';document.getElementById('groupTable').style.width = '80%';" onkeypress="if (document.getElementById('addToGradebook') != null){document.getElementById('addToGradebook').style.display = 'none';document.getElementById('addToGradebook').checked=false};document.getElementById('groupTable').style.display = 'block';document.getElementById('groupTable').style.width = '80%';" />
 					#else
Index: assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_preview_assignment.vm
===================================================================
--- assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_preview_assignment.vm	(revision 14942)
+++ assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_preview_assignment.vm	(revision 14943)
@@ -143,8 +143,16 @@
 												$!tlang.getString('addtogradebook')
 										</th>
 										<td>
-											## if honor pledge is required
-											$!value_AddToGradebook
+											#if($!gradebookChoice.equals("no"))
+												## not associating with gradebook
+												$tlang.getString("grading.no")
+											#elseif($!gradebookChoice.equals("add"))
+												## add new entry to gradebook
+												$tlang.getString("grading.add")
+											#elseif($!gradebookChoice.equals("associate"))
+												## associated with one existing entry in Gradebook
+												$tlang.getString("grading.associate"):$!associateGradebookAssignment
+											#end
 										</td>
 									</tr>
 								#end
Index: assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml
===================================================================
--- assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml	(revision 14942)
+++ assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml	(revision 14943)
@@ -24,7 +24,7 @@
  		
  		<!--use to hide or show the Assignments 'Add to Gradebook' option for group particular assignments.
  			By default this is false -->
- 		<property name="allowGroupAssignmentsInGradebook"><value>false</value></property>
+ 		<property name="allowGroupAssignmentsInGradebook"><value>true</value></property>
 	</bean>
 
 </beans>
svn diff -r14943:14944 https://source.sakaiproject.org/svn
Index: assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml
===================================================================
--- assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml	(revision 14943)
+++ assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml	(revision 14944)
@@ -24,7 +24,7 @@
  		
  		<!--use to hide or show the Assignments 'Add to Gradebook' option for group particular assignments.
  			By default this is false -->
- 		<property name="allowGroupAssignmentsInGradebook"><value>true</value></property>
+ 		<property name="allowGroupAssignmentsInGradebook"><value>false</value></property>
 	</bean>
 
 </beans>
svn diff -r15124:15125 https://source.sakaiproject.org/svn
Index: assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
===================================================================
--- assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(revision 15124)
+++ assignment/assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(revision 15125)
@@ -379,6 +379,12 @@
 
 	private static final String NEW_ASSIGNMENT_ADD_TO_GRADEBOOK = "new_assignment_add_to_gradebook";
 	
+	// the three choices for Gradebook Integration
+	private static final String GRADEBOOK_INTEGRATION_NO = "no";
+	private static final String GRADEBOOK_INTEGRATION_ADD = "add";
+	private static final String GRADEBOOK_INTEGRATION_ASSOCIATE = "associate";
+	
+	
 	private static final String NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT = "new_assignment_associate_gradebook_assignment";
 
 	private static final String NEW_ASSIGNMENT_RANGE = "new_assignment_range";
@@ -1050,10 +1056,12 @@
 			context.put("gradebookAssignments", gradebookAssignmentsExceptSamigo);
 			if (StringUtil.trimToNull((String) state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK)) == null)
 			{
-				state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, "no");
+				state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, GRADEBOOK_INTEGRATION_NO);
 			}
 			context.put("gradebookChoice", state.getAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK));
-			
+			context.put("gradebookChoice_no", GRADEBOOK_INTEGRATION_NO);
+			context.put("gradebookChoice_add", GRADEBOOK_INTEGRATION_ADD);
+			context.put("gradebookChoice_associate", GRADEBOOK_INTEGRATION_ASSOCIATE);
 			context.put("associateGradebookAssignment", state.getAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT));
 		}
 
@@ -1653,6 +1661,8 @@
 	 */
 	protected void integrateGradebook (SessionState state, String assignmentRef, String associateGradebookAssignment, String addUpdateRemoveAssignment, String oldAssignment_title, String newAssignment_title, int newAssignment_maxPoints, Time newAssignment_dueTime, String submissionRef, String updateRemoveSubmission)
 	{
+		associateGradebookAssignment = StringUtil.trimToNull(associateGradebookAssignment);
+		
 		// add or remove external grades to gradebook
 		// a. if Gradebook does not exists, do nothing, 'cos setting should have been hidden
 		// b. if Gradebook exists, just call addExternal and removeExternal and swallow any exception. The
@@ -1673,7 +1683,7 @@
 			if (addUpdateRemoveAssignment != null)
 			{
 				// add an entry into Gradebook for newly created assignment or modified assignment, and there wasn't a correspond record in gradebook yet
-				if ((addUpdateRemoveAssignment.equals("add") || (addUpdateRemoveAssignment.equals("update") && !isExternalAssignmentDefined)) && StringUtil.trimToNull(associateGradebookAssignment) == null)
+				if ((addUpdateRemoveAssignment.equals(GRADEBOOK_INTEGRATION_ADD) || (addUpdateRemoveAssignment.equals("update") && !isExternalAssignmentDefined)) && associateGradebookAssignment == null)
 				{
 					// add assignment into gradebook
 					try
@@ -1728,7 +1738,7 @@
 				else if (addUpdateRemoveAssignment.equals("remove"))
 				{
 					// remove assignment and all submission grades
-					if (isExternalAssignmentDefined && associateGradebookAssignment == null)
+					if (isExternalAssignmentDefined)
 					{
 						try
 						{
@@ -1751,7 +1761,7 @@
 
 					if (updateRemoveSubmission.equals("update")
 							&& a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK) != null
-							&& !a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK).equals("no")
+							&& !a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK).equals(GRADEBOOK_INTEGRATION_NO)
 							&& a.getContent().getTypeOfGrade() == Assignment.SCORE_GRADE_TYPE)
 					{
 						if (submissionRef == null)
@@ -1767,7 +1777,8 @@
 								AssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();
 								User[] submitters = aSubmission.getSubmitters();
 								String submitterId = submitters[0].getId();
-								Double grade = StringUtil.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,aSubmission.getGrade())) : null;
+								String gradeString = StringUtil.trimToNull(aSubmission.getGrade());
+								Double grade = (gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(state,gradeString)) : null;
 								m.put(submitterId, grade);
 							}
 							
@@ -1790,7 +1801,8 @@
 											AssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();
 											User[] submitters = aSubmission.getSubmitters();
 											String submitterId = submitters[0].getId();
-											Double grade = StringUtil.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,aSubmission.getGrade())) : null;
+											String gradeString = StringUtil.trimToNull(aSubmission.getGrade());
+											Double grade = (gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(state,gradeString)) : null;
 											g.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitterId, grade, assignmentToolTitle);
 										}
 									}
@@ -1809,28 +1821,27 @@
 								AssignmentSubmission aSubmission = (AssignmentSubmission) AssignmentService
 										.getSubmission(submissionRef);
 								User[] submitters = aSubmission.getSubmitters();
+								String gradeString = StringUtil.trimToNull(aSubmission.getGrade());
 								
 								if (associateGradebookAssignment != null)
 								{
 									if (g.isExternalAssignmentDefined(gradebookUid, associateGradebookAssignment))
 									{
 										// the associated assignment is externally maintained
-										g.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), StringUtil
-												.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,
-												aSubmission.getGrade())) : null);
+										g.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), 
+												(gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(state,gradeString)) : null);
 									}
 									else if (g.isAssignmentDefined(gradebookUid, associateGradebookAssignment))
 									{
 										// the associated assignment is internal one, update records
 										g.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), 
-															StringUtil.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,aSubmission.getGrade())) : null, assignmentToolTitle);
+												(gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(state,gradeString)) : null, assignmentToolTitle);
 									}
 								}
 								else
 								{
-									g.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), StringUtil
-											.trimToNull(aSubmission.getGrade()) != null ? Double.valueOf(displayGrade(state,
-											aSubmission.getGrade())) : null);
+									g.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), 
+											(gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(state,gradeString)) : null);
 								}
 							}
 							catch (Exception e)
@@ -1840,11 +1851,11 @@
 						}
 
 					}
-					else if (updateRemoveSubmission.equals("remove") && isExternalAssignmentDefined)
+					else if (updateRemoveSubmission.equals("remove"))
 					{
 						if (submissionRef == null)
 						{
-							// remove all submission grades (cannot think of a user case within Assignment tool for this)
+							// remove all submission grades (when changing the associated entry in Gradebook)
 							Iterator submissions = AssignmentService.getSubmissions(a);
 
 							// any score to copy over? get all the assessmentGradingData and copy over
@@ -1852,10 +1863,15 @@
 							{
 								AssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();
 								User[] submitters = aSubmission.getSubmitters();
-								if (g.isExternalAssignmentDefined(gradebookUid, assignmentRef))
+								if (isExternalAssociateAssignmentDefined)
 								{
-									g.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), null);
+									// if the old associated assignment is an external maintained one
+									g.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), null);
 								}
+								else if (isAssignmentDefined)
+								{
+									g.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), null, assignmentToolTitle);
+								}
 							}
 						}
 						else
@@ -3131,12 +3147,20 @@
 		String grading = params.getString(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
 		state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, grading);
 		
+		// only when choose to associate with assignment in Gradebook
 		String associateAssignment = params.getString(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT);
-		state.setAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, associateAssignment);
+		if (grading.equals(GRADEBOOK_INTEGRATION_ASSOCIATE))
+		{
+			state.setAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, associateAssignment);
+		}
+		else
+		{
+			state.setAttribute(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, "");
+		}
 		
 		if (grading != null)
 		{
-			if (!grading.equals("no"))
+			if (!grading.equals(GRADEBOOK_INTEGRATION_NO))
 			{
 				// gradebook integration only available to point-grade assignment
 				if (gradeType != Assignment.SCORE_GRADE_TYPE)
@@ -3145,7 +3169,7 @@
 				}
 				
 				// if chosen as "associate", have to choose one assignment from Gradebook
-				if (grading.equals("associate") && StringUtil.trimToNull(associateAssignment) == null)
+				if (grading.equals(GRADEBOOK_INTEGRATION_ASSOCIATE) && StringUtil.trimToNull(associateAssignment) == null)
 				{
 					addAlert(state, rb.getString("grading.associate.alert"));
 				}
@@ -3389,6 +3413,9 @@
 		// assignment old title
 		String aOldTitle = null;
 		
+		// assignment old associated Gradebook entry if any
+		String oAssociateGradebookAssignment = null;
+		
 		SessionState state = ((JetspeedRunData) data).getPortletSessionState(((JetspeedRunData) data).getJs_peid());
 
 		String mode = (String) state.getAttribute(STATE_MODE);
@@ -3675,8 +3702,16 @@
 					}
 					aPropertiesEdit.addProperty(ResourceProperties.NEW_ASSIGNMENT_CHECK_AUTO_ANNOUNCE, checkAutoAnnounce);
 					aPropertiesEdit.addProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, addtoGradebook);
+					oAssociateGradebookAssignment = aPropertiesEdit.getProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT); 
 					aPropertiesEdit.addProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, associateGradebookAssignment);
 
+					if (addtoGradebook.equals(GRADEBOOK_INTEGRATION_ADD))
+					{
+						// if the choice is to add an entry into Gradebook, let just mark it as associated with such new entry then
+						aPropertiesEdit.addProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, GRADEBOOK_INTEGRATION_ASSOCIATE);
+						aPropertiesEdit.addProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT, a.getReference());
+
+					}
 					// set group property
 					String range = (String) state.getAttribute(NEW_ASSIGNMENT_RANGE);
 					try
@@ -3993,7 +4028,7 @@
 							// integrate with Gradebook
 							String aReference = a.getReference();
 							String addUpdateRemoveAssignment = "remove";
-							if (!addtoGradebook.equals("no"))
+							if (!addtoGradebook.equals(GRADEBOOK_INTEGRATION_NO))
 							{
 								// if integrate with Gradebook
 								if (!AssignmentService.getAllowGroupAssignmentsInGradebook() && (range.equals("groups")))
@@ -4018,11 +4053,11 @@
 								}
 								else
 								{
-									if (addtoGradebook.equals("add"))
+									if (addtoGradebook.equals(GRADEBOOK_INTEGRATION_ADD))
 									{
-										addUpdateRemoveAssignment = "add";
+										addUpdateRemoveAssignment = GRADEBOOK_INTEGRATION_ADD;
 									}
-									else if (addtoGradebook.equals("associate"))
+									else if (addtoGradebook.equals(GRADEBOOK_INTEGRATION_ASSOCIATE))
 									{
 										addUpdateRemoveAssignment = "update";
 									}
@@ -4035,6 +4070,12 @@
 											
 											// add all existing grades, if any, into Gradebook
 											integrateGradebook(state, aReference, associateGradebookAssignment, null, null, null, -1, null, null, "update");
+											
+											// if the assignment has been assoicated with a different entry in gradebook before, remove those grades from the entry in Gradebook
+											if (StringUtil.trimToNull(oAssociateGradebookAssignment) != null && !oAssociateGradebookAssignment.equals(associateGradebookAssignment))
+											{
+												integrateGradebook(state, aReference, oAssociateGradebookAssignment, null, null, null, -1, null, null, "remove");
+											}
 										}
 										catch (NumberFormatException nE)
 										{
@@ -4050,7 +4091,7 @@
 							else
 							{
 								// remove assignment entry from Gradebook
-								integrateGradebook(state, aReference, associateGradebookAssignment, "remove", null, null, -1, null, null, null);
+								integrateGradebook(state, aReference, oAssociateGradebookAssignment, "remove", null, null, -1, null, null, "remove");
 							}
 						}	// if post
 						
@@ -4676,7 +4717,7 @@
 			
 			// add grades into Gradebook
 			String integrateWithGradebook = a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK);
-			if (integrateWithGradebook != null && !integrateWithGradebook.equals("no"))
+			if (integrateWithGradebook != null && !integrateWithGradebook.equals(GRADEBOOK_INTEGRATION_NO))
 			{
 				// integrate with Gradebook
 				String associateGradebookAssignment = StringUtil.trimToNull(a.getProperties().getProperty(NEW_ASSIGNMENT_ASSOCIATE_GRADEBOOK_ASSIGNMENT));
@@ -5414,7 +5455,7 @@
 		// make the honor pledge not include as the default
 		state.setAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE, (new Integer(Assignment.HONOR_PLEDGE_NONE)).toString());
 
-		state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, "no");
+		state.setAttribute(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK, GRADEBOOK_INTEGRATION_NO);
 
 		state.setAttribute(NEW_ASSIGNMENT_ATTACHMENT, EntityManager.newReferenceList());
 
Index: assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm
===================================================================
--- assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(revision 15124)
+++ assignment/assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(revision 15125)
@@ -396,25 +396,25 @@
 					$!tlang.getString('grading')
 					<div class="checkbox  indnt2" style="display:$!addToGBDisplay">
 						## hide the assignment list from Gradebook when clicked
-						<input type="radio" name="$!name_Addtogradebook" id="no" value="no" #if($!gradebookChoice.equals("no"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';">
-						<label for="no">$tlang.getString("grading.no")</label>
+						<input type="radio" name="$!name_Addtogradebook" id="$!gradebookChoice_no" value="$!gradebookChoice_no" #if($!gradebookChoice.equals("$!gradebookChoice_no"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';">
+						<label for="$!gradebookChoice_no">$tlang.getString("grading.no")</label>
 						<br/>
 						## hide the assignment list from Gradebook when clicked
-						<input type="radio" name="$!name_Addtogradebook" id="add" value="add" #if($!gradebookChoice.equals("add"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';">
-						<label for="add">$tlang.getString("grading.add")</label>
+						<input type="radio" name="$!name_Addtogradebook" id="$!gradebookChoice_add" value="$!gradebookChoice_add" #if($!gradebookChoice.equals("$!gradebookChoice_add"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'none';">
+						<label for="$!gradebookChoice_add">$tlang.getString("grading.add")</label>
 						<br/>
 						## if there exists properiate assignment entries in Gradebook
 						#if ($!gradebookAssignments.size() > 0) 
 							## show the assignment list from Gradebook when clicked
-							<input type="radio" name="$!name_Addtogradebook" id="associate" value="associate" #if($!gradebookChoice.equals("associate"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'block';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'block';">
-							<label for="associate">$tlang.getString("grading.associate")</label>
+							<input type="radio" name="$!name_Addtogradebook" id="$!gradebookChoice_associate" value="$!gradebookChoice_associate" #if($!gradebookChoice.equals("$!gradebookChoice_associate"))checked#end onclick="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'block';" onkeypress="document.getElementById('$!name_AssociateGradebookAssignment').style.display = 'block';">
+							<label for="$!gradebookChoice_associate">$tlang.getString("grading.associate")</label>
 						#end
 					</div>
 				</p>	
 				## if there exists properiate assignment entries in Gradebook
 				#if ($!gradebookAssignments.size() > 0) 
 					## show the "Gradebook Assignment list" choices or not
-					#if($!allowGroupAssignmentsInGradebook && $!gradebookChoice.equals("associate"))
+					#if($!allowGroupAssignmentsInGradebook && $!gradebookChoice.equals("$!gradebookChoice_associate"))
 						#set ($gbListDisplay="block")
 					#else
 						#set ($gbListDisplay="none")
@@ -437,9 +437,9 @@
 			#end
 			## group/section support
 			<br />
-			$!tlang.getString('access')
 			#if ($allowAddSiteAssignment)
 				#if ($!groups)
+					$!tlang.getString('access')
 					<p class="checkbox  indnt2">
 						#if (!$!allowGroupAssignmentsInGradebook)
 							<input type="radio" name="range" id="site" value="site" #if($!range == "site")checked="checked"#end onclick="if (document.getElementById('addToGradebook') !=null){document.getElementById('addToGradebook').style.display = 'block'};document.getElementById('groupTable').style.display = 'none';" onkeypress="if (document.getElementById('addToGradebook') != null){document.getElementById('addToGradebook').style.display = 'block'};document.getElementById('groupTable').style.display = 'none';"/>
@@ -453,6 +453,7 @@
 					<input type="hidden" name="range" id="site" value="site" />
 				#end
 			#elseif ($allowAddAssignment)
+				$!tlang.getString('access')
 				#if ($!groups.size() >1)
 					<label for="$tlang.getString('groups')">$tlang.getString("groups")</label>
 				#else
svn diff -r15125:15126 https://source.sakaiproject.org/svn
Index: assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml
===================================================================
--- assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml	(revision 15125)
+++ assignment/assignment-impl/pack/src/webapp/WEB-INF/components.xml	(revision 15126)
@@ -24,7 +24,7 @@
  		
  		<!--use to hide or show the Assignments 'Add to Gradebook' option for group particular assignments.
  			By default this is false -->
- 		<property name="allowGroupAssignmentsInGradebook"><value>false</value></property>
+ 		<property name="allowGroupAssignmentsInGradebook"><value>true</value></property>
 	</bean>
 
 </beans>
