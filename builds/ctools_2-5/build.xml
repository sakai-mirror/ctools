<project name="ctoolsBuild2" basedir="." default="buildCToolsImage" >

  <!--
  $Id$
  $HeadURL$
  -->

  <!-- 
       TTD:
  -->
  <property name="scripts.dir" value="${basedir}/tools" />
  <!-- First import -->
  <import file="${scripts.dir}/import-contrib.xml" />

  <property name="configs.dir" value="${basedir}/configs" />

  <!-- Somethings are shared by every build -->
  <property file="${configs.dir}/shared.properties" /> 

  <!-- hold name of the files defining the build. -->
  <!-- put default file name in a property so it can be overridden on the command line. -->
  <property name="buildfilename" value="defaultbuild.properties" />
  <property file="${user.dir}/${buildfilename}" /> 
  <!-- Find the current revision number of the build file, before importing properties file -->
  <!-- temporary file -->
      
  <if>
      <not>
	  <isset property="CANDIDATE.revision"/>
      </not>
      <then>
	  <!-- Use 'svn info' output all information, but in XML -->
	  <property name="tmp.file" value="${user.dir}/svn.info.tmp.xml"/>
	  <echo>${user.dir}/${ctoolsBuildFileName}</echo>
	  <exec executable="svn" output="${tmp.file}">
	      <arg value="info"/>
	      <arg value="--xml"/>
	      <arg value="${user.dir}/${ctoolsBuildFileName}"/>
	  </exec>

	  <!-- Read the information directly from xml -->
	  <xmlproperty file="${tmp.file}" prefix="buildsvn"/>
	  <!-- Delete the temp file -->
	  <delete file="${tmp.file}"/>
	  <if>
	      <not>
		  <isset property="buildsvn.info.entry.commit(revision)"/>
	      </not>
	      <then>
		  <property name="CANDIDATE.revision" value="HEAD"/>
	      </then>
	      <else>
		  <property name="CANDIDATE.revision" value="${buildsvn.info.entry.commit(revision)}"/>
	      </else>
	  </if>

	  <!--
	  <echoproperties prefix="buildsvn."/>
	  -->
	  <echo>Building revision number: ${CANDIDATE.revision}</echo>
      </then>
  </if>


  <!-- Include the ctools build -->
  <property file="${user.dir}/${ctoolsBuildFileName}" />  
  <!-- group the build directories. -->
  <property name="work.dir" value="${basedir}/work/${sakai.tag}/work.${type}" /> 
  <!-- Change to version control patches -->
  <!-- If the patchtype is set, don't -->
  <condition property="patches.dir" value="${basedir}/patches" else="${work.dir}/build/ctools-patches" >
      <and>
	  <isset property="patchtype"/>
	  <contains string="${patchtype}" substring="local" />
      </and>
  </condition>

  <if>  
      <not>
	  <isset property="artifacts.dir"/>
      </not>
  <then>
      <echo>Pulling patches from: ${patches.dir}</echo>
  </then>
  </if>

  <property name="artifacts.dir" value="${basedir}/artifacts/${sakai.tag}.${type}" />

  <import file="${scripts.dir}/build-type-${type}.xml" />  
  <import file="${scripts.dir}/build-type-util.xml" /> 
  <import file="${scripts.dir}/build-patch-util.xml" />

  <!-- Make a special file that has the current revision number on it -->
  <!-- Make this later in the build 
  <echo file="${work.dir}/revision-${CANDIDATE.revision}-${sakai.tag}">
      ${CANDIDATE.revision}-${sakai.tag}
  </echo>
  -->

  <target name="info" >
    <echo> Base ant script to build CTools releases.</echo>
  </target>

</project>
