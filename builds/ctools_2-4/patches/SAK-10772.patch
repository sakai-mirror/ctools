Index: metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/shared/mgt/impl/StructuredArtifactDefinitionManagerImpl.java
===================================================================
--- metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/shared/mgt/impl/StructuredArtifactDefinitionManagerImpl.java	(revision 32931)
+++ metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/shared/mgt/impl/StructuredArtifactDefinitionManagerImpl.java	(revision 32933)
@@ -39,6 +39,8 @@
 import org.sakaiproject.exception.*;
 import org.sakaiproject.metaobj.security.AuthenticationManager;
 import org.sakaiproject.metaobj.security.AuthorizationFacade;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
+import org.sakaiproject.metaobj.security.AllowChildrenMapSecurityAdvisor;
 import org.sakaiproject.metaobj.shared.ArtifactFinder;
 import org.sakaiproject.metaobj.shared.DownloadableManager;
 import org.sakaiproject.metaobj.shared.SharedFunctionConstants;
@@ -1253,6 +1255,13 @@
                viewLocation = getContentHosting().resolveUuid(sadb.getAlternateViewXslt().getValue());
             }
          }
+         List refs = new ArrayList();
+         refs.add(getContentHosting().getReference(viewLocation));
+         refs.add(getContentHosting().getReference("/group/PortfolioAdmin/system"));
+         Map funcs = new HashMap();
+         funcs.put(ContentHostingService.EVENT_RESOURCE_READ, refs);
+         funcs.put(ContentHostingService.AUTH_RESOURCE_HIDDEN, refs);
+         getSecurityService().pushAdvisor(new AllowChildrenMapSecurityAdvisor(funcs));
          return getContentHosting().getResource(viewLocation).streamContent();
       } catch (ServerOverloadException e) {
          throw new RuntimeException(e);
Index: metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowChildrenMapSecurityAdvisor.java
===================================================================
--- metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowChildrenMapSecurityAdvisor.java	(revision 0)
+++ metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowChildrenMapSecurityAdvisor.java	(revision 32933)
@@ -0,0 +1,43 @@
+package org.sakaiproject.metaobj.security;
+
+import org.sakaiproject.authz.api.SecurityAdvisor;
+
+import java.util.Map;
+import java.util.List;
+import java.util.Iterator;
+
+/**
+ * Created by IntelliJ IDEA.
+ * User: johnellis
+ * Date: Jul 20, 2007
+ * Time: 11:14:13 AM
+ * To change this template use File | Settings | File Templates.
+ */
+public class AllowChildrenMapSecurityAdvisor extends AllowMapSecurityAdvisor {
+
+   public AllowChildrenMapSecurityAdvisor(Map allowedReferences) {
+      super(allowedReferences);
+   }
+
+   public AllowChildrenMapSecurityAdvisor(String function, List references) {
+      super(function, references);
+   }
+
+   public AllowChildrenMapSecurityAdvisor(String function, String reference) {
+      super(function, reference);
+   }
+
+   public SecurityAdvice isAllowed(String userId, String function, String reference) {
+      List refs = (List)getAllowedReferences().get(function);
+      if (refs != null) {
+
+         for (Iterator<String> i=refs.iterator();i.hasNext();) {
+            if (reference.startsWith(i.next())) {
+               return SecurityAdvice.ALLOWED;
+            }
+         }
+      }
+
+      return SecurityAdvice.PASS;
+   }
+}

Property changes on: metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowChildrenMapSecurityAdvisor.java
___________________________________________________________________
Name: svn:eol-style
   + native
Name: svn:keywords
   + Date Revision Author HeadURL Id

Index: metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowMapSecurityAdvisor.java
===================================================================
--- metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowMapSecurityAdvisor.java	(revision 0)
+++ metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowMapSecurityAdvisor.java	(revision 32933)
@@ -0,0 +1,71 @@
+/**********************************************************************************
+* $URL:https://source.sakaiproject.org/svn/osp/common/api/src/java/org/theospi/portfolio/security/AllowMapSecurityAdvisor.java $
+* $Id:AllowMapSecurityAdvisor.java 9134 2006-05-08 20:28:42Z chmaurer@iupui.edu $
+***********************************************************************************
+*
+* Copyright (c) 2005, 2006 The Sakai Foundation.
+*
+* Licensed under the Educational Community License, Version 1.0 (the "License");
+* you may not use this file except in compliance with the License.
+* You may obtain a copy of the License at
+*
+*      http://www.opensource.org/licenses/ecl1.php
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*
+**********************************************************************************/
+package org.sakaiproject.metaobj.security;
+
+import java.util.ArrayList;
+import java.util.Hashtable;
+import java.util.List;
+import java.util.Map;
+
+import org.sakaiproject.authz.api.SecurityAdvisor;
+
+/**
+ * Created by IntelliJ IDEA.
+ * User: John Ellis
+ * Date: Nov 4, 2005
+ * Time: 5:02:36 PM
+ * To change this template use File | Settings | File Templates.
+ */
+public class AllowMapSecurityAdvisor implements SecurityAdvisor {
+
+   private Map allowedReferences;
+
+   public AllowMapSecurityAdvisor(Map allowedReferences) {
+      this.allowedReferences = allowedReferences;
+   }
+
+   public AllowMapSecurityAdvisor(String function, List references) {
+      this.allowedReferences = new Hashtable();
+      allowedReferences.put(function, references);
+   }
+
+   public AllowMapSecurityAdvisor(String function, String reference) {
+      this.allowedReferences = new Hashtable();
+      List references = new ArrayList();
+      references.add(reference);
+      allowedReferences.put(function, references);
+   }
+
+   public SecurityAdvice isAllowed(String userId, String function, String reference) {
+      List refs = (List)allowedReferences.get(function);
+      if (refs != null) {
+         if (refs.contains(reference)) {
+            return SecurityAdvice.ALLOWED;
+         }
+      }
+
+      return SecurityAdvice.PASS;
+   }
+
+   public Map getAllowedReferences() {
+      return allowedReferences;
+   }
+}

Property changes on: metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/security/AllowMapSecurityAdvisor.java
___________________________________________________________________
Name: svn:eol-style
   + native
Name: svn:keywords
   + Date Revision Author HeadURL Id

Index: osp/common/api-impl/src/java/org/theospi/portfolio/guidance/impl/GuidanceManagerImpl.java
===================================================================
--- osp/common/api-impl/src/java/org/theospi/portfolio/guidance/impl/GuidanceManagerImpl.java	(revision 32931)
+++ osp/common/api-impl/src/java/org/theospi/portfolio/guidance/impl/GuidanceManagerImpl.java	(revision 32933)
@@ -39,24 +39,21 @@
 import org.sakaiproject.entity.api.ResourcePropertiesEdit;
 import org.sakaiproject.exception.IdUnusedException;
 import org.sakaiproject.exception.ServerOverloadException;
-import org.sakaiproject.exception.TypeException;
-import org.sakaiproject.exception.PermissionException;
 import org.sakaiproject.metaobj.shared.mgt.ContentEntityUtil;
 import org.sakaiproject.metaobj.shared.mgt.IdManager;
 import org.sakaiproject.metaobj.shared.model.Id;
 import org.sakaiproject.metaobj.shared.model.MimeType;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
 import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
 import org.theospi.portfolio.guidance.mgt.GuidanceManager;
 import org.theospi.portfolio.guidance.model.Guidance;
 import org.theospi.portfolio.guidance.model.GuidanceItem;
 import org.theospi.portfolio.guidance.model.GuidanceItemAttachment;
-import org.theospi.portfolio.security.AllowMapSecurityAdvisor;
 import org.theospi.portfolio.security.AuthorizationFacade;
 
 import java.io.*;
 import java.util.*;
 import java.util.zip.*;
-import java.net.URLEncoder;
 
 /**
  * Created by IntelliJ IDEA.
@@ -68,7 +65,7 @@
 public class GuidanceManagerImpl extends HibernateDaoSupport implements GuidanceManager {
 
    protected final Log logger = LogFactory.getLog(getClass());
-   
+
    private AuthorizationFacade authorizationFacade;
    private SecurityService securityService;
    private EntityManager entityManager;
@@ -91,7 +88,7 @@
 
       return guidance;
    }
-   
+
    public Guidance getGuidance(Id guidanceId) {
       return getGuidance(guidanceId, true);
    }
@@ -148,7 +145,7 @@
                      }
                   } while(fileLocation > 0);
                   item.setText(guidanceText);
-               
+
                changed = true;
             }
          }
@@ -207,7 +204,7 @@
    public Guidance getGuidance(String id) {
       return getGuidance(id, true);
    }
-   
+
    public Guidance getGuidance(String id, boolean checkAuthz) {
       return getGuidance(getIdManager().getId(id), checkAuthz);
    }
@@ -440,7 +437,7 @@
             bos.write(c);
             c = zis.read();
          }
-         
+
          String fileId = fileParent.getId() + file.getName();
          ContentResource rez = null;
          try {
@@ -528,8 +525,8 @@
       return new AttachmentImportWrapper(element.getChildText("ref"),
             element.getChildText("url"));
    }
-   
-   
+
+
    /**
     * Pulls all Guidance
     * @return List of Guidance
@@ -537,11 +534,11 @@
    public List getGuidanceForWarehousing()
    {
       List guidance = getHibernateTemplate().findByNamedQuery("listGuidances");
-      
+
       for(Iterator i = guidance.iterator(); i.hasNext(); ) {
          Guidance w = (Guidance)i.next();
       }
-      
+
       return guidance;
    }
 
Index: osp/common/api-impl/src/java/org/theospi/portfolio/style/impl/StyleManagerImpl.java
===================================================================
--- osp/common/api-impl/src/java/org/theospi/portfolio/style/impl/StyleManagerImpl.java	(revision 32931)
+++ osp/common/api-impl/src/java/org/theospi/portfolio/style/impl/StyleManagerImpl.java	(revision 32933)
@@ -66,12 +66,12 @@
 import org.sakaiproject.exception.ServerOverloadException;
 import org.sakaiproject.exception.TypeException;
 import org.sakaiproject.metaobj.security.AuthenticationManager;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
 import org.sakaiproject.metaobj.shared.mgt.AgentManager;
 import org.sakaiproject.metaobj.shared.mgt.IdManager;
 import org.sakaiproject.metaobj.shared.model.Agent;
 import org.sakaiproject.metaobj.shared.model.Id;
 import org.sakaiproject.metaobj.shared.model.MimeType;
-import org.sakaiproject.metaobj.shared.model.StructuredArtifactDefinitionBean;
 import org.sakaiproject.metaobj.worksite.mgt.WorksiteManager;
 import org.sakaiproject.site.api.Site;
 import org.sakaiproject.site.api.SiteService.SelectionType;
@@ -79,7 +79,6 @@
 import org.springframework.orm.hibernate3.HibernateCallback;
 import org.springframework.orm.hibernate3.HibernateObjectRetrievalFailureException;
 import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
-import org.theospi.portfolio.security.AllowMapSecurityAdvisor;
 import org.theospi.portfolio.security.AuthorizationFacade;
 import org.theospi.portfolio.shared.model.Node;
 import org.theospi.portfolio.style.StyleConsumer;
Index: osp/common/api-impl/src/java/org/theospi/portfolio/review/impl/ReviewManagerImpl.java
===================================================================
--- osp/common/api-impl/src/java/org/theospi/portfolio/review/impl/ReviewManagerImpl.java	(revision 32931)
+++ osp/common/api-impl/src/java/org/theospi/portfolio/review/impl/ReviewManagerImpl.java	(revision 32933)
@@ -37,10 +37,10 @@
 import org.sakaiproject.metaobj.shared.mgt.IdManager;
 import org.sakaiproject.metaobj.shared.model.Agent;
 import org.sakaiproject.metaobj.shared.model.Id;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
 import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
 import org.theospi.portfolio.review.mgt.ReviewManager;
 import org.theospi.portfolio.review.model.Review;
-import org.theospi.portfolio.security.AllowMapSecurityAdvisor;
 import org.theospi.portfolio.security.AuthorizationFacade;
 import org.theospi.portfolio.shared.model.Node;
 
Index: osp/wizard/api-impl/src/java/org/theospi/portfolio/wizard/mgt/impl/WizardManagerImpl.java
===================================================================
--- osp/wizard/api-impl/src/java/org/theospi/portfolio/wizard/mgt/impl/WizardManagerImpl.java	(revision 32931)
+++ osp/wizard/api-impl/src/java/org/theospi/portfolio/wizard/mgt/impl/WizardManagerImpl.java	(revision 32933)
@@ -68,6 +68,7 @@
 import org.sakaiproject.exception.TypeException;
 import org.sakaiproject.exception.UnsupportedFileTypeException;
 import org.sakaiproject.metaobj.security.AuthenticationManager;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
 import org.sakaiproject.metaobj.shared.ArtifactFinder;
 import org.sakaiproject.metaobj.shared.DownloadableManager;
 import org.sakaiproject.metaobj.shared.mgt.AgentManager;
@@ -104,7 +105,6 @@
 import org.theospi.portfolio.matrix.model.WizardPageForm;
 import org.theospi.portfolio.review.mgt.ReviewManager;
 import org.theospi.portfolio.review.model.Review;
-import org.theospi.portfolio.security.AllowMapSecurityAdvisor;
 import org.theospi.portfolio.security.Authorization;
 import org.theospi.portfolio.security.AuthorizationFacade;
 import org.theospi.portfolio.security.impl.AllowAllSecurityAdvisor;
Index: osp/matrix/api-impl/src/java/org/theospi/portfolio/matrix/HibernateMatrixManagerImpl.java
===================================================================
--- osp/matrix/api-impl/src/java/org/theospi/portfolio/matrix/HibernateMatrixManagerImpl.java	(revision 32931)
+++ osp/matrix/api-impl/src/java/org/theospi/portfolio/matrix/HibernateMatrixManagerImpl.java	(revision 32933)
@@ -73,6 +73,7 @@
 import org.sakaiproject.exception.ServerOverloadException;
 import org.sakaiproject.exception.TypeException;
 import org.sakaiproject.metaobj.security.AuthenticationManager;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
 import org.sakaiproject.metaobj.shared.ArtifactFinder;
 import org.sakaiproject.metaobj.shared.DownloadableManager;
 import org.sakaiproject.metaobj.shared.EntityContextFinder;
@@ -102,7 +103,6 @@
 import org.theospi.portfolio.matrix.model.impl.MatrixContentEntityProducer;
 import org.theospi.portfolio.review.mgt.ReviewManager;
 import org.theospi.portfolio.review.model.Review;
-import org.theospi.portfolio.security.AllowMapSecurityAdvisor;
 import org.theospi.portfolio.security.Authorization;
 import org.theospi.portfolio.security.AuthorizationFacade;
 import org.theospi.portfolio.shared.model.Node;
Index: osp/matrix/tool/src/java/org/theospi/portfolio/matrix/control/CellFormPickerController.java
===================================================================
--- osp/matrix/tool/src/java/org/theospi/portfolio/matrix/control/CellFormPickerController.java	(revision 32931)
+++ osp/matrix/tool/src/java/org/theospi/portfolio/matrix/control/CellFormPickerController.java	(revision 32933)
@@ -55,7 +55,7 @@
 import org.springframework.web.servlet.ModelAndView;
 import org.theospi.portfolio.matrix.model.WizardPage;
 import org.theospi.portfolio.matrix.model.WizardPageForm;
-import org.theospi.portfolio.security.AllowMapSecurityAdvisor;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
 import org.theospi.portfolio.shared.model.Node;
 import org.theospi.portfolio.shared.tool.BaseFormResourceFilter;
 
Index: osp/presentation/api-impl/src/java/org/theospi/portfolio/presentation/model/impl/PresentationManagerImpl.java
===================================================================
--- osp/presentation/api-impl/src/java/org/theospi/portfolio/presentation/model/impl/PresentationManagerImpl.java	(revision 32931)
+++ osp/presentation/api-impl/src/java/org/theospi/portfolio/presentation/model/impl/PresentationManagerImpl.java	(revision 32933)
@@ -38,6 +38,7 @@
 import org.sakaiproject.event.cover.NotificationService;
 import org.sakaiproject.exception.*;
 import org.sakaiproject.metaobj.security.AuthenticationManager;
+import org.sakaiproject.metaobj.security.AllowMapSecurityAdvisor;
 import org.sakaiproject.metaobj.shared.ArtifactFinder;
 import org.sakaiproject.metaobj.shared.ArtifactFinderManager;
 import org.sakaiproject.metaobj.shared.DownloadableManager;
@@ -60,7 +61,6 @@
 import org.theospi.portfolio.presentation.PresentationManager;
 import org.theospi.portfolio.presentation.export.PresentationExport;
 import org.theospi.portfolio.presentation.model.*;
-import org.theospi.portfolio.security.AllowMapSecurityAdvisor;
 import org.theospi.portfolio.security.Authorization;
 import org.theospi.portfolio.security.AuthorizationFacade;
 import org.theospi.portfolio.security.AuthorizationFailedException;
