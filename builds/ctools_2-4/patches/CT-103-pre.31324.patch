--- site-manage/site-manage-tool/tool/src/java/org/sakaiproject/site/tool/SiteAction.java	2007-06-07 15:06:03.000000000 -0400
+++ site-manage/site-manage-tool/tool/src/java/org/sakaiproject/site/tool/SiteAction.java	2007-06-07 15:06:59.000000000 -0400
@@ -7916,43 +7916,6 @@
 
 	} // getParticipantList
 
-	private Vector prepareParticipants(String realmId, List providerCourseList) {
-		Vector participants = new Vector();
-		try {
-			AuthzGroup realm = AuthzGroupService.getAuthzGroup(realmId);
-			Set grants = realm.getMembers();
-			// Collections.sort(users);
-			for (Iterator i = grants.iterator(); i.hasNext();) {
-				Member g = (Member) i.next();
-				String userString = g.getUserEid();
-				Role r = g.getRole();
-				try {
-					User user = UserDirectoryService.getUserByEid(userString);
-					Participant participant = new Participant();
-					participant.name = user.getSortName();
-					participant.uniqname = user.getId();
-					if (r != null) {
-						participant.role = r.getId();
-					}
-					if (g.isProvided()) {
-						// official member, can't delete
-						participant.removeable = false;
-					} else {
-						participant.removeable = true;
-					}
-					participants.add(participant);
-				} catch (UserNotDefinedException e) {
-					// deal with missing user quietly without throwing a
-					// warning message
-					M_log.warn(e.getMessage());
-				}
-			}
-
-		} catch (GroupNotDefinedException e) {
-			M_log.warn(this + "  IdUnusedException " + realmId);
-		}
-		return participants;
-	}
 
 	/**
 	 * getRoles
