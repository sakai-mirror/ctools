#!/bin/bash # -*- sh -*-
# generate an externals file from an existing .externals file from SVN

# $HeadURL$
# $Id$
# take .externals file in svn, get the latest revision number for
# each entry in it and write it out in the svn externals format.

# TTD:
# - Does the .externals file already need to be checked in?
# - Don't use a tmp file in current directory.
# - 

URL=$1

if [ x$URL == x ]; then
    echo must specify a svn url to a directory with a .externals file
    exit 1;
fi

# Take existing externals and create a script to get current revision numbers
svn cat $URL/.externals | perl -n -e 'm|(\S+).*(http.*)| && print "svn --limit 1 -q log $2\necho $1 -rREVISION $2\n"'  >| ./externals.tmp.1.$$

echo "# " $(date) >| ./externals.exact
# find the updated information and format as a .externals script
source ./externals.tmp.1.$$ | perl -n -e 'chomp; if (m/r(\d+)\s/) {$R=$1}; if (m/https/i) {s/REVISION/$R/; print " $_\n"}' >> ./externals.exact

# find and print the maximum revision number
#cat  ./externals.tmp.2.$$ | perl -n -e 'BEGIN { $maxR = -1} chomp; if (m/r(\d+)\s/) {$R=$1}; if (m/https/i) {$maxR = ($R > $maxR ? $R : $maxR);} END { print "# maxR: $maxR\n";}'
cat  ./externals.exact | perl -n -e 'BEGIN { $maxR = -1} chomp; if (m/r(\d+)\s/) {$R=$1}; if (m/https/i) {$maxR = ($R > $maxR ? $R : $maxR);} END { print "# maxR: $maxR\n";}' >| externals.tmp.2.$$
cat ./externals.exact >> ../externals.tmp.2.$$

echo "reformat to have max revision."

# print out the annotated .externals list
#cat ./externals.tmp.2.$$
cat ./externals.exact

# clean up
rm ./externals.tmp.1.$$
#rm ./externals.tmp.2.$$
#rm ./externals.tmp.$$
#end
