# Configuration for building a particular version of CTools.

# $HeadURL$
# $Id$

# This is the configuration file for CTools production builds.

##################################################################
##################################################################
########### These are the values most likely to change
## This will be part of the CTools footer
#CANDIDATE.revision=41095
CANDIDATE.revision=42474
##
# This is the name of the svn directory which has an externals
# defintion of most of the contents of a release.  The reason that it
# isn't sufficent to define an entire release is that some tools
# require special handling (e.g. melete) and some patches will be
# applied.
sakai.svndir=ctools_2-4-xT

## This appears in the CTools footer also. It indicates which version
## of Sakai this build is based on.  It will correspond to the
## sakai.svndir specified above.
version.sakai=Sakai_2-4-xT
version.note="adding mneme and 4 resources fixes. drop chat fix for now"

# Patches added for this release
#ADDED_IN_T=SAK-13040.patch,SAK-12786.patch,SAK-5849.patch,CT-311.patch,CT-461.patch
# Take out the chat patch since it doesn't work yet.
ADDED_IN_T=SAK-13040.patch,SAK-12786.patch,SAK-5849.patch,CT-311.patch

patchFileNames=SPEED.patch,SAK-7489.patch,CT-231.patch,SAK-9725.patch,SAK-10583.patch,SAK-10497.patch,SAK-10939.patch,SAK-10831.patch,SAK-11023.patch,SAK-10953.patch,SAK-10575.patch,SAK-10823.patch,SAK-11204.patch,SAK-11204B.patch,SAK-10338-10810.patch,CT-292.patch,CT-294.patch,SAK-10419.patch,CT-125.patch,CT-428.patch,SAK-10772.patch,SAK-10585.patch,SAK-10758.patch,${ADDED_IN_T}

##################################################################
##################################################################

build.externals.file=${sakai.svndir}.externals

## Add the contents of these properties files to the default
## sakai.properties.  Muliple version of sakai.properties will be
## created to correspond to the different instances we maintain.
## E.g. testctools, ctload, production, localhost.
propertiesfileslist=coursemanagement.properties,citations.properties,oracle.properties,instance.properties,evalsystem.properties

## Find a build script corresponding to this build type.  This feature
## is not used much and may disappear.
type=prod

## This names the configuration properties file.  Recursive isn't it?
config-file=project.properties

## Check out the source don't export it since sometimes it can be very
## useful to use svn when generating patches.
svnCmd=co

########## General build information ##########################
## This name is used on maven artifacts.
## It may also be used on a build sub directory.
sakai.tag=ctools_2-4-x_CANDIDATE

## appears in the ctools footer.
version.service=[r${CANDIDATE.revision}]

## necessary?
# This is not in build properties since it depends on a value from this file.
install.test.dir=${testtomcatdir}/${sakai.tag}


################## Sakai build information ######################
# The repository url prefix for the main sakai code.
# the directory to be extracted from svn

## name of the externals directory defining the build contents.
sakai.svnurl=https://source.sakaiproject.org/svn/ctools/trunk/builds/externals/${sakai.svndir}
sakai.revision=${CANDIDATE.revision}

##################################################################
#### Special handling
##################################################################

## Some code requires special handling.  By convention any special values are 
## prefixed by the module name.

################ Melete build information ######################

# The melete svn repository url.  Since the melete source in not in an accessable location
# we download their release and check that whole tar file into our respository. 

melete.dirname=melete-2.3.m2

# have separate archive name as that is used again later in build.
# Name of the archive file in our repository.
melete.archivename=melete-2.3.m2-sakai2.4.tar.gz
melete.svnurl=https://source.sakaiproject.org/svn/ctools/trunk/builds/ctools_2-4/melete/${melete.archivename}
melete.revision=${sakai.revision}

# Currently use the /melete symbolic link as otherwise we need to have new 
# images for each different instance, and need to change existing paths
# for melete artifacts in the database.
melete.homedir=/melete
melete.docsdir=/melete/meleteDocs
melete.packagingdir=/melete/packagefiles
melete.uploaddir=/melete/uploads

###########

#################### Umich grade configuration.
# Umich version of grading scales
gradebook.grades.config.sourcefile=UMichGrades.xml
# Location in the tomcat image where the file should go.
gradebook.grades.config.tofile=gradebook/service/sakai-pack/src/webapp/WEB-INF/components.xml

### course management group provider configuation file
CM.groups.config.sourcefile=UMichCM.xml
CM.groups.config.tofile=providers/component/src/webapp/WEB-INF/components.xml

####################################################
########## contrib tools ###########################
####################################################

################# 
# Test Center (mneme)
# Need to install mce specially

tiny_mce.path=http://source.sakaiproject.org/maven/tiny_mce/wars
tiny_mce.name.src=tiny_mce-3.0.3.war
tiny_mce.name.dest=tiny_mce.war

################# chat build information ######################
# The chat tool
chat.install.skip=true
# #chat.svndir=chat
# chat.svndir=sakai_2-4-x
# chat.svnurl=https://source.sakaiproject.org/svn/chat/branches/${chat.svndir}
# chat.revision=HEAD

## Much of the following may disappear.  Before using svn externals much work
## when into getting the right set of tools.  Now most of that is specified in the
## externals definition.
## Just leave things as they are for now.

###############################################
# Specify which tools should have a custom install. A custom install 
# comes from either needing to have a different source location and/or 
# version number or from installing a tool that doesn't come included with the 
# default Sakai source distribution.
# 
# If the property is defined then that specifies that the custom installation should 
# NOT be done.  If the property is not defined then the custom installtion will be done.
# This may be reversed in the future.
#
# Any defined value of these properties is treated as a 'true' value,
# so comment these out if want to install that section.
###############################################
#

# note this has some hardcoding in build-sakai.xml
#samigo.install.skip=YES
#messagecenter.install.skip=YES
usermembership.install.skip=YES
#osp.install.skip=YES
search.install.skip=YES

#linktool.install.skip=true
#blog.install.skip=true
sitestats.install.skip=true
#webservices.install.skip=true
# Don't install a custom rwiki
rwiki.install.skip=true
# Use a custom assignments.
assignment.install.skip=true

itunesu.install.skip=true
muse.install.skip=true
mneme.install.skip=true
ambrosia.install.skip=true
config-viewer.install.skip=true
ctools.extract.skip=true
gmt.install.skip=true
#ctools.install.skip=true


#end  
