Index: access/access-impl/impl/src/java/org/sakaiproject/access/tool/AccessServlet.java
===================================================================
--- access/access-impl/impl/src/java/org/sakaiproject/access/tool/AccessServlet.java	(revision 6878)
+++ access/access-impl/impl/src/java/org/sakaiproject/access/tool/AccessServlet.java	(working copy)
@@ -106,6 +106,8 @@
 
 	/** Session attribute holding copyright-accepted references (a collection of Strings). */
 	protected static final String COPYRIGHT_ACCEPTED_REFS_ATTR = "Access.Copyright.Accepted";
+	
+	protected BasicAuth basicAuth = null;
 
 	/** init thread - so we don't wait in the actual init() call */
 	public class AccessServletInit extends Thread
@@ -140,6 +142,9 @@
 	{
 		super.init(config);
 		startInit();
+		basicAuth = new BasicAuth();
+		basicAuth.init();
+		
 	}
 
 	/**
@@ -164,14 +169,15 @@
 	 */
 	public void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException
 	{
+		// process any login that might be present
+		basicAuth.doLogin(req);
 		// catch the login helper requests
 		String option = req.getPathInfo();
 		String[] parts = option.split("/");
 		if ((parts.length == 2) && ((parts[1].equals("login"))))
 		{
 			doLogin(req, res, null);
-		}
-
+		}	
 		else
 		{
 			dispatch(req, res);
@@ -192,6 +198,8 @@
 	 */
 	public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException
 	{
+		// process any login that might be present
+		basicAuth.doLogin(req);
 		// catch the login helper posts
 		String option = req.getPathInfo();
 		String[] parts = option.split("/");
@@ -328,7 +336,9 @@
 			// if not permitted, and the user is the anon user, let them login
 			if (SessionManager.getCurrentSessionUserId() == null)
 			{
-				doLogin(req, res, origPath);
+				try {
+					doLogin(req, res, origPath);
+				} catch ( IOException ioex ) {}
 				return;
 			}
 
@@ -412,9 +422,17 @@
 	 *        HttpServletResponse object back to the client.
 	 * @param path
 	 *        The current request path, set ONLY if we want this to be where to redirect the user after successfull login
+	 * @throws IOException 
 	 */
-	protected void doLogin(HttpServletRequest req, HttpServletResponse res, String path) throws ToolException
+	protected void doLogin(HttpServletRequest req, HttpServletResponse res, String path) throws ToolException, IOException
 	{
+		// if basic auth is valid do that
+		if ( basicAuth.doAuth(req,res) ) {
+			//System.err.println("BASIC Auth Request Sent to the Browser ");
+			return;
+		} 
+		
+		
 		// get the Sakai session
 		Session session = SessionManager.getCurrentSession();
 
